#####################################################################
#
# CSCB58 Winter 2024 Assembly Final Project
# University of Toronto, Scarborough
#
# Student: Leo Liao, 1009067885, liaoleo, leo.liao@mail.utoronto.ca
#
# Bitmap Display Configuration:
# - Unit width in pixels: 4 (update this as needed)
# - Unit height in pixels: 4 (update this as needed)
# - Display width in pixels: 256 (update this as needed)
# - Display height in pixels: 256 (update this as needed)
# - Base Address for Display: 0x10008000 ($gp)
#
# Which milestoneshave been reached in this submission?
# (See the assignment handout for descriptions of the milestones)
# - Milestone 1/2/3/4 (choose the one the applies)
#
# Which approved features have been implemented for milestone 3?
# (See the assignment handout for the list of additional features)
# 1. (fill in the feature, if any)
# 2. (fill in the feature, if any)
# 3. (fill in the feature, if any)
# ... (add more if necessary)
#
# Link to video demonstration for final submission:
# - (insert YouTube / MyMedia / other URL here). Make sure we can view it!
#
# Are you OK with us sharing the video with people outside course staff?
# - yes / no / yes, and please share this project github link as well!
#
# Any additional information that the TA needs to know:
# - (write here, if any)
#
#####################################################################

# Bitmap display starter code
#
# Bitmap Display Configuration:
# - Unit width in pixels: 4
# - Unit height in pixels: 4
# - Display width in pixels: 512
# - Display height in pixels: 256
# - Base Address for Display: 0x10008000 ($gp)
#
# Equivalences
# Codes will determine what type of block it is
# 0xAARRGGBB
# The AA field will be used to define whether a block is permeable or can damage the play
# FF - will not damage the user is permeable (air)
# 01 - will not damage the user is not permeable (wall/floor)
# 02 - will damage the user is pearmeable (we want the user to see that they walked into a saw/spike)

# addresses of IO
.eqv BASE_ADDRESS 0x10008000
.eqv KEYBOARD_ADDRESS 0xffff0000

.eqv MS_PER_FRAME 33
.eqv UNIT_PER_PIX 4
.eqv WIDTH 128
.eqv HEIGHT 64
.eqv WIDTH_BY_4 512
.eqv HEIGHT_BY_4 256

# these will be our colours
.eqv sawDarkGrey 0x028d8d8f
.eqv sawLightGrey 0x02e6e6e6
.eqv sawBlack 0x02000000
.eqv playerBody 0x00FFFFFF
.eqv playerEyes 0x00000000
.eqv playerHelmet 0x00aea9a9
.eqv playerFeather 0x00FF0000
.eqv backgroundLength 8192
.eqv platformColour 0x00d4d4d4

.data
debugOne: .asciiz "Register value "
newline: .asciiz "\n"

# number of saws that we have
sawCount: .word 2

# this will store the starting locations of the saws
sawStarting: .word 29864, 30004

# this will store the end locations of the saws
sawEnding: .word 29984, 30124

# this will store the state that saws are in frame (1 - 3)
sawStates: .word 0, 1, 2, 0, 1 , 2

# this will store the current locations of the saws (based on their centers)
sawLocations: .word 29984, 30004

# these will store which direction the saw is currently moving in
# 0: stationary
# -1: left
# 1: right
# 2: up
# -2: down
sawDirections: .word -1, 1, 0, 0, 0, 2

# these will store the state that the moving spike groups are in frames 1-7
spikeGroupStates: .word 1, 7, 1

currentPlayerLocation: .word 31772 # current player location using pixel units

# 1 for facing right -1 for facing left
currentCharacterDirection: .word 1

redrawQueueLength: .word 0 # we will update this as needed and read up to this number to redraw

# dimmed lighting
background: .word 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff040404, 0xff060606, 0xff090909, 0xff0c0c0c, 0xff0f0f0f, 0xff121212, 0xff161616, 0xff191919, 0xff1b1b1b, 0xff7f7f7f, 0xff3f3f3f, 0xff9b9b9b, 0xff828282, 0xffacacad, 0xff5c5c5c, 0xffadadae, 0xff838383, 0xff828282, 0xff838383, 0xffababac, 0xff5b5b5c, 0xffacacad, 0xffaaaaaa, 0xff828282, 0xff585858, 0xff3c3c3c, 0xff161616, 0xff131313, 0xff101010, 0xff0c0c0c, 0xff090909, 0xff070707, 0xff040404, 0xff030303, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff040404, 0xff060606, 0xff080808, 0xff0a0a0a, 0xff0c0c0c, 0xff101010, 0xff121212, 0xff141414, 0xff161616, 0xff171717, 0xff181818, 0xff171717, 0xff151515, 0xff131313, 0xff101010, 0xff0d0d0d, 0xff0b0b0b, 0xff090909, 0xff080808, 0xff060606, 0xff060606, 0xff050505, 0xff040404, 0xff040404, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff010101, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff040404, 0xff070707, 0xff090909, 0xff0d0d0d, 0xff101010, 0xff141414, 0xff171717, 0xff1a1a1a, 0xff1d1d1d, 0xff808080, 0xff3f3f40, 0xffadadad, 0xff888888, 0xff828283, 0xff5d5d5d, 0xffacacad, 0xff848484, 0xff848484, 0xffababac, 0xffadadae, 0xff5f5f5f, 0xff959596, 0xff828282, 0xffa3a3a4, 0xff5a5a5a, 0xff3d3d3d, 0xff171717, 0xff151515, 0xff121212, 0xff0e0e0e, 0xff0b0b0b, 0xff080808, 0xff060606, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff040404, 0xff060606, 0xff090909, 0xff0c0c0c, 0xff0f0f0f, 0xff121212, 0xff161616, 0xff191919, 0xff1d1d1d, 0xff777777, 0xff828282, 0xff3b3b3b, 0xff202020, 0xff1e1e1e, 0xff1b1b1b, 0xff171717, 0xff131313, 0xff101010, 0xff0c0c0c, 0xff0a0a0a, 0xff080808, 0xff060606, 0xff060606, 0xff050505, 0xff040404, 0xff040404, 0xff040404, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff020202, 0xff030303, 0xff050505, 0xff080808, 0xff0b0b0b, 0xff0e0e0e, 0xff121212, 0xff161616, 0xff191919, 0xff1b1b1b, 0xff1d1d1d, 0xff7f7f7f, 0xff404040, 0xffaeaeae, 0xffacacad, 0xff848484, 0xff5c5c5c, 0xff848484, 0xffadadae, 0xffacacad, 0xffacacad, 0xffadadae, 0xff5c5c5c, 0xff828282, 0xffadadad, 0xffacacad, 0xff5a5a5a, 0xff3f3f3f, 0xff191919, 0xff161616, 0xff131313, 0xff101010, 0xff0c0c0c, 0xff090909, 0xff060606, 0xff040404, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff050505, 0xff070707, 0xff0a0a0a, 0xff0d0d0d, 0xff101010, 0xff141414, 0xff191919, 0xff1d1d1d, 0xff212121, 0xff7a7a7a, 0xff848484, 0xff787878, 0xff474747, 0xff474747, 0xff262626, 0xff232324, 0xff202020, 0xff1a1a1a, 0xff161616, 0xff111111, 0xff0e0e0e, 0xff0b0b0b, 0xff090909, 0xff070707, 0xff060606, 0xff050505, 0xff050505, 0xff040404, 0xff040404, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff030303, 0xff030303, 0xff060606, 0xff090909, 0xff0c0c0c, 0xff101010, 0xff131313, 0xff161616, 0xff191919, 0xff1c1c1c, 0xff1e1e1e, 0xff7e7e7f, 0xff404040, 0xffadadae, 0xffadadae, 0xffacacad, 0xff5d5d5d, 0xff838383, 0xff858585, 0xffadadae, 0xffadadae, 0xff848484, 0xff5c5c5c, 0xffacacad, 0xffadadae, 0xffaaaaab, 0xff5b5b5b, 0xff3d3d3d, 0xff191919, 0xff171717, 0xff141414, 0xff111111, 0xff0d0d0d, 0xff0a0a0a, 0xff070707, 0xff050505, 0xff030303, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff050505, 0xff070707, 0xff0a0a0a, 0xff0f0f0f, 0xff121212, 0xff161616, 0xff191919, 0xff1f1f1f, 0xff232323, 0xff818181, 0xff484848, 0xff4a4a4a, 0xff808080, 0xff4b4b4b, 0xff858585, 0xff848484, 0xff2c2c2c, 0xff282828, 0xff232323, 0xff1c1c1c, 0xff161616, 0xff121212, 0xff0e0e0e, 0xff0b0b0b, 0xff090909, 0xff070707, 0xff060606, 0xff050505, 0xff050505, 0xff040404, 0xff040404, 0xff030303, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff020202, 0xff020202, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff030303, 0xff030303, 0xff060606, 0xff090909, 0xff0c0c0c, 0xff101010, 0xff141414, 0xff181818, 0xff1a1a1a, 0xff1d1d1d, 0xff1e1e1e, 0xff808080, 0xff404040, 0xffadadae, 0xffadadae, 0xffacacad, 0xff5d5d5d, 0xffacacad, 0xff828282, 0xffa4a4a5, 0xff848484, 0xff848484, 0xff848484, 0xffacacad, 0xffacacad, 0xffadadae, 0xff5b5b5b, 0xff3e3e3e, 0xff1b1b1b, 0xff191919, 0xff151515, 0xff121212, 0xff0f0f0f, 0xff0b0b0b, 0xff080808, 0xff060606, 0xff030303, 0xff020202, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff040404, 0xff070707, 0xff0a0a0a, 0xff0e0e0e, 0xff131313, 0xff171717, 0xff1b1b1b, 0xff202020, 0xff242424, 0xff848484, 0xff848484, 0xff4c4c4c, 0xff4d4d4d, 0xff3a3a3a, 0xff4f4f4f, 0xff4f4f4f, 0xff505051, 0xff868687, 0xff2f2f2f, 0xff2a2a2a, 0xff232323, 0xff1d1d1d, 0xff161616, 0xff111111, 0xff0f0f0f, 0xff0c0c0c, 0xff090909, 0xff070707, 0xff060606, 0xff050505, 0xff050505, 0xff040404, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff010101, 0xff020202, 0xff020202, 0xff020202, 0xff020202, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff030303, 0xff040404, 0xff060606, 0xff090909, 0xff0d0d0d, 0xff111111, 0xff151515, 0xff191919, 0xff1b1b1b, 0xff1d1d1d, 0xff1f1f1f, 0xff818181, 0xff404040, 0xff8f8f8f, 0xffacacad, 0xffadadae, 0xff5d5d5d, 0xffadadae, 0xffa8a8a9, 0xff89898a, 0xff848484, 0xffababac, 0xff616161, 0xffababac, 0xffacacad, 0xff9a9a9a, 0xff5d5d5d, 0xff404040, 0xff1d1d1d, 0xff191919, 0xff161616, 0xff131313, 0xff101010, 0xff0c0c0c, 0xff090909, 0xff060606, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff060606, 0xff090909, 0xff0d0d0d, 0xff121212, 0xff171717, 0xff1c1c1c, 0xff202020, 0xff252525, 0xff717171, 0xff858585, 0xff4c4c4c, 0xff3c3c3c, 0xff3d3d3d, 0xff3d3d3d, 0xff3e3e3e, 0xff424242, 0xff505050, 0xff505050, 0xff707070, 0xff484848, 0xff2b2b2b, 0xff232323, 0xff1c1c1c, 0xff161616, 0xff121212, 0xff0e0e0e, 0xff0a0a0a, 0xff080808, 0xff060606, 0xff060606, 0xff050505, 0xff050505, 0xff040404, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff020202, 0xff020202, 0xff020202, 0xff020202, 0xff020202, 0xff020202, 0xff020202, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff030303, 0xff040404, 0xff060606, 0xff0a0a0a, 0xff0e0e0e, 0xff121212, 0xff161616, 0xff191919, 0xff1c1c1c, 0xff1d1d1d, 0xff1f1f1f, 0xff818181, 0xff414141, 0xff838383, 0xff898989, 0xffacacad, 0xff5e5e5e, 0xffadadae, 0xffababac, 0xff9f9fa0, 0xffababab, 0xffaaaaab, 0xff656565, 0xffababab, 0xff858585, 0xff848484, 0xff606060, 0xff434343, 0xff202020, 0xff1b1b1b, 0xff171717, 0xff131313, 0xff101010, 0xff0c0c0c, 0xff090909, 0xff060606, 0xff040404, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff050505, 0xff080808, 0xff0c0c0c, 0xff111111, 0xff161616, 0xff1b1b1b, 0xff202020, 0xff838383, 0xff838384, 0xff848484, 0xff4d4d4d, 0xff3b3b3c, 0xff404040, 0xff666666, 0xff686868, 0xff4b4b4b, 0xff404040, 0xff414141, 0xff535354, 0xff535353, 0xff505050, 0xff7e7e7e, 0xff2a2a2a, 0xff222222, 0xff1a1a1a, 0xff151515, 0xff101010, 0xff0d0d0d, 0xff0a0a0a, 0xff070707, 0xff060606, 0xff060606, 0xff050505, 0xff040404, 0xff040404, 0xff040404, 0xff040404, 0xff040404, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff020202, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff030303, 0xff040404, 0xff070707, 0xff0a0a0a, 0xff0f0f0f, 0xff131313, 0xff161616, 0xff191919, 0xff1c1c1c, 0xff1e1e1e, 0xff1f1f1f, 0xff818181, 0xff414141, 0xffadadae, 0xff838383, 0xff888889, 0xff848484, 0xffababab, 0xffababab, 0xffaaaaab, 0xffa9a9aa, 0xffaaaaaa, 0xff686868, 0xff878787, 0xff878787, 0xffaaaaab, 0xff626262, 0xff474747, 0xff232323, 0xff1e1e1e, 0xff191919, 0xff141414, 0xff101010, 0xff0d0d0d, 0xff0a0a0a, 0xff070707, 0xff050505, 0xff030303, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff060606, 0xff0b0b0b, 0xff101010, 0xff151515, 0xff19191a, 0xff1f1f1f, 0xff242424, 0xff464647, 0xff4a4a4a, 0xff424243, 0xff3c3c3c, 0xff3e3e3e, 0xff848484, 0xff5d5d5d, 0xff6a6a6a, 0xff5f5f5f, 0xff747474, 0xff7a7a7a, 0xff565656, 0xff555555, 0xff545454, 0xff505051, 0xff303030, 0xff272727, 0xff1e1e1f, 0xff171717, 0xff131313, 0xff101010, 0xff0c0c0c, 0xff090909, 0xff060606, 0xff060606, 0xff050505, 0xff060606, 0xff050505, 0xff050505, 0xff040404, 0xff050505, 0xff040404, 0xff040404, 0xff040404, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff020202, 0xff010101, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff030303, 0xff050505, 0xff070707, 0xff0b0b0b, 0xff0f0f0f, 0xff131313, 0xff161616, 0xff191919, 0xff1c1c1c, 0xff1e1e1e, 0xff202020, 0xff818181, 0xff414141, 0xffadadae, 0xffacacae, 0xff848484, 0xff646464, 0xffababab, 0xffaaaaaa, 0xffa8a8a9, 0xffa8a8a8, 0xffa8a8a9, 0xff6b6b6b, 0xff888888, 0xffa9a9a9, 0xffaaaaab, 0xff656565, 0xff4a4a4a, 0xff272727, 0xff212121, 0xff1a1a1a, 0xff151515, 0xff111111, 0xff0e0e0e, 0xff0a0a0a, 0xff070707, 0xff050505, 0xff030303, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff020202, 0xff050505, 0xff090909, 0xff0d0d0d, 0xff131313, 0xff181818, 0xff1d1d1d, 0xff232323, 0xff424242, 0xff4a4a4a, 0xff484848, 0xff3b3b3b, 0xff848484, 0xff878787, 0xff696969, 0xff6a6a6a, 0xff666666, 0xff6b6b6b, 0xff5d5d5d, 0xff898989, 0xff474747, 0xff4f4f4f, 0xff575757, 0xff545454, 0xff383838, 0xff2d2d2d, 0xff232323, 0xff1b1b1b, 0xff151515, 0xff111111, 0xff0d0d0d, 0xff090909, 0xff080808, 0xff060606, 0xff060606, 0xff060606, 0xff060606, 0xff050505, 0xff050505, 0xff060606, 0xff050505, 0xff060606, 0xff050505, 0xff040404, 0xff040404, 0xff050505, 0xff050505, 0xff050505, 0xff040404, 0xff040404, 0xff040404, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff010101, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff030303, 0xff050505, 0xff070707, 0xff0b0b0b, 0xff0f0f0f, 0xff131313, 0xff161616, 0xff191919, 0xff1c1c1c, 0xff1e1e1e, 0xff202020, 0xff818181, 0xff414141, 0xffadadae, 0xffacacad, 0xffababab, 0xff666666, 0xff888888, 0xffa8a8a9, 0xffa8a8a8, 0xffa8a8a9, 0xff919191, 0xff6e6e6e, 0xffa7a7a8, 0xffa8a8a9, 0xffa8a8a9, 0xff676767, 0xff4d4d4d, 0xff2c2c2c, 0xff252525, 0xff1d1d1d, 0xff161616, 0xff111111, 0xff0e0e0e, 0xff0b0b0b, 0xff080808, 0xff050505, 0xff030303, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff060606, 0xff0a0a0a, 0xff101010, 0xff161616, 0xff1b1b1b, 0xff212121, 0xff272727, 0xff858585, 0xff4b4b4b, 0xff404040, 0xff7f7f7f, 0xff878787, 0xff6a6a6a, 0xff6a6a6a, 0xff6b6b6b, 0xff7f7f7f, 0xff595959, 0xff6d6d6d, 0xff6d6d6d, 0xff898989, 0xff4b4b4b, 0xff525252, 0xff575757, 0xff7f7f7f, 0xff323233, 0xff272727, 0xff1f1f1f, 0xff191919, 0xff131313, 0xff0f0f0f, 0xff0b0b0b, 0xff080808, 0xff070707, 0xff060606, 0xff060606, 0xff060606, 0xff060606, 0xff060606, 0xff060606, 0xff060606, 0xff060606, 0xff060606, 0xff060606, 0xff060606, 0xff060606, 0xff060606, 0xff060606, 0xff060606, 0xff050505, 0xff050505, 0xff040404, 0xff040404, 0xff030303, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff030303, 0xff050505, 0xff070707, 0xff0b0b0b, 0xff101010, 0xff131313, 0xff161616, 0xff191919, 0xff1c1c1c, 0xff1e1e1e, 0xff1f1f1f, 0xff818181, 0xff414141, 0xffadadae, 0xffacacac, 0xffa9a9aa, 0xff888888, 0xff8b8b8b, 0xff8a8a8a, 0xffa8a8a8, 0xff9b9b9b, 0xff8b8b8b, 0xff8b8b8b, 0xffa8a8a8, 0xffa8a8a8, 0xffa8a8a8, 0xff6a6a6a, 0xff545454, 0xff303030, 0xff282828, 0xff202020, 0xff171717, 0xff111111, 0xff0e0e0e, 0xff0b0b0b, 0xff080808, 0xff050505, 0xff030303, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff070707, 0xff0c0c0c, 0xff121212, 0xff181818, 0xff1e1e1e, 0xff2c2c2c, 0xff848484, 0xff505051, 0xff3a3a3a, 0xff3d3d3e, 0xff878787, 0xff666666, 0xff6a6a6a, 0xff6b6b6b, 0xff595959, 0xffa6a6a7, 0xff7b7b7b, 0xff5a5a5a, 0xff5a5a5a, 0xff8a8a8a, 0xff8a8a8a, 0xff4a4a4a, 0xff5a5a5a, 0xff898989, 0xff454545, 0xff2c2c2c, 0xff212121, 0xff191919, 0xff151515, 0xff101010, 0xff0c0c0c, 0xff090909, 0xff070707, 0xff070707, 0xff070707, 0xff060606, 0xff060606, 0xff070707, 0xff070707, 0xff060606, 0xff080808, 0xff080808, 0xff080808, 0xff080808, 0xff090909, 0xff090909, 0xff080808, 0xff080808, 0xff070707, 0xff060606, 0xff060606, 0xff050505, 0xff040404, 0xff030303, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff050505, 0xff070707, 0xff0b0b0b, 0xff101010, 0xff131313, 0xff161616, 0xff191919, 0xff1c1c1c, 0xff1d1d1d, 0xff1f1f1f, 0xff828282, 0xff414141, 0xffacacad, 0xffababab, 0xffa9a9a9, 0xff6d6d6d, 0xffa8a8a8, 0xff8d8d8d, 0xff8b8b8b, 0xff8b8b8b, 0xffa8a8a8, 0xff8b8b8b, 0xffa7a7a8, 0xffa8a8a8, 0xffa8a8a8, 0xff6a6a6a, 0xff535353, 0xff333333, 0xff2c2c2c, 0xff222222, 0xff191919, 0xff121212, 0xff0e0e0e, 0xff0b0b0b, 0xff080808, 0xff050505, 0xff030303, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff020202, 0xff040404, 0xff090909, 0xff0e0e0e, 0xff141414, 0xff1a1a1a, 0xff404040, 0xff848484, 0xff787878, 0xff4d4d4d, 0xff3c3c3c, 0xff848484, 0xff878787, 0xff696969, 0xff686868, 0xff646464, 0xffa8a8a8, 0xffa8a8a8, 0xffa7a7a8, 0xff7c7c7c, 0xff6d6d6d, 0xff8b8b8b, 0xff6e6e6e, 0xff646464, 0xff4c4c4c, 0xff595959, 0xff848485, 0xff858586, 0xff242425, 0xff1c1c1c, 0xff161616, 0xff121212, 0xff0d0d0d, 0xff0a0a0a, 0xff080808, 0xff070707, 0xff070707, 0xff070707, 0xff070707, 0xff080808, 0xff090909, 0xff090909, 0xff0a0a0a, 0xff0a0a0a, 0xff0b0b0b, 0xff0c0c0c, 0xff0c0c0c, 0xff0c0c0c, 0xff0c0c0c, 0xff0b0b0b, 0xff0a0a0a, 0xff090909, 0xff080808, 0xff070707, 0xff060606, 0xff050505, 0xff040404, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff050505, 0xff070707, 0xff0b0b0b, 0xff0f0f0f, 0xff131313, 0xff161616, 0xff191919, 0xff1c1c1c, 0xff1d1d1d, 0xff1f1f1f, 0xff818181, 0xff414141, 0xff828282, 0xffaaaaab, 0xffa8a8a9, 0xff6e6e6e, 0xffa8a8a8, 0xffa7a7a8, 0xff8b8b8b, 0xffa1a1a2, 0xffa7a7a8, 0xff8b8b8b, 0xffa8a8a8, 0xffa8a8a8, 0xff8a8a8a, 0xff5e5e5e, 0xff595959, 0xff363636, 0xff2e2e2e, 0xff242424, 0xff1a1a1a, 0xff121212, 0xff0e0e0e, 0xff0b0b0b, 0xff080808, 0xff050505, 0xff030303, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff020202, 0xff050505, 0xff090909, 0xff101010, 0xff161616, 0xff1d1d1d, 0xff232323, 0xff3e3e3e, 0xff717171, 0xff4d4d4d, 0xff3e3e3e, 0xff888888, 0xff636363, 0xff696969, 0xff616161, 0xff8b8b8b, 0xff8b8b8b, 0xffa8a8a8, 0xff8c8c8d, 0xff8f8f8f, 0xffa8a8a8, 0xff8a8a8a, 0xff6e6e6e, 0xff6f6f6f, 0xff4d4d4d, 0xff5a5a5a, 0xff565656, 0xff4f4f4f, 0xff262626, 0xff1d1d1d, 0xff181818, 0xff131313, 0xff0e0e0e, 0xff0b0b0b, 0xff090909, 0xff080808, 0xff080808, 0xff080808, 0xff090909, 0xff090909, 0xff0a0a0a, 0xff0b0b0b, 0xff0c0c0c, 0xff0e0e0e, 0xff0f0f0f, 0xff101010, 0xff101010, 0xff101010, 0xff101010, 0xff0f0f0f, 0xff0e0e0e, 0xff0c0c0c, 0xff0a0a0a, 0xff090909, 0xff070707, 0xff060606, 0xff050505, 0xff040404, 0xff030303, 0xff030303, 0xff020202, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff050505, 0xff070707, 0xff0b0b0b, 0xff0f0f0f, 0xff131313, 0xff161616, 0xff191919, 0xff1b1b1b, 0xff1d1d1d, 0xff1f1f1f, 0xff818181, 0xff404040, 0xff9b9b9b, 0xff868686, 0xffa6a6a7, 0xff707070, 0xffa7a7a8, 0xffa6a6a7, 0xffa4a4a5, 0xffa7a7a8, 0xffa7a7a8, 0xff8b8b8b, 0xffa5a5a6, 0xff8a8a8a, 0xff919191, 0xff5a5a5a, 0xff585858, 0xff383838, 0xff303030, 0xff262626, 0xff1b1b1b, 0xff131313, 0xff0e0e0e, 0xff0b0b0b, 0xff080808, 0xff050505, 0xff030303, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff020202, 0xff060606, 0xff0b0b0b, 0xff111111, 0xff181818, 0xff1e1e1e, 0xff242424, 0xff2a2a2a, 0xff858585, 0xff4f4f4f, 0xff3f3f3f, 0xff878787, 0xff676767, 0xff6a6a6a, 0xffa9a9aa, 0xffa8a8a9, 0xff898989, 0xffa8a8a8, 0xff8a8a8a, 0xffa8a8a8, 0xffa8a8a9, 0xffa8a8a8, 0xff717171, 0xff717171, 0xff4d4d4d, 0xff5c5c5c, 0xff575757, 0xff383838, 0xff292929, 0xff1f1f1f, 0xff191919, 0xff131313, 0xff0f0f0f, 0xff0c0c0c, 0xff090909, 0xff090909, 0xff090909, 0xff090909, 0xff0b0b0b, 0xff0c0c0c, 0xff0d0d0d, 0xff0e0e0e, 0xff101010, 0xff111111, 0xff131313, 0xff131313, 0xff141414, 0xff151515, 0xff141414, 0xff131313, 0xff131313, 0xff111111, 0xff0f0f0f, 0xff0c0c0c, 0xff090909, 0xff080808, 0xff060606, 0xff050505, 0xff040404, 0xff030303, 0xff030303, 0xff020202, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff050505, 0xff070707, 0xff0a0a0a, 0xff0f0f0f, 0xff121213, 0xff161616, 0xff181818, 0xff1b1b1b, 0xff1d1d1d, 0xff202020, 0xff828283, 0xff414141, 0xffadadad, 0xffa5a5a7, 0xff898989, 0xff8b8b8b, 0xffa7a7a8, 0xffa6a6a7, 0xffa6a6a7, 0xffa6a6a7, 0xffa7a7a8, 0xff717171, 0xff8b8b8b, 0xff9c9c9c, 0xffa8a8a8, 0xff777777, 0xff565656, 0xff393939, 0xff323232, 0xff272728, 0xff1c1c1c, 0xff131313, 0xff0e0e0e, 0xff0b0b0b, 0xff080808, 0xff050505, 0xff030303, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff060606, 0xff0c0c0c, 0xff121212, 0xff191919, 0xff202020, 0xff262626, 0xff2b2b2b, 0xff4a4a4a, 0xff4f4f4f, 0xff404040, 0xff696969, 0xff6a6a6a, 0xff555555, 0xffa8a8a9, 0xffa8a8a9, 0xff898989, 0xff646464, 0xff8b8b8b, 0xffa7a7a8, 0xffa8a8a8, 0xffa8a8a8, 0xff707070, 0xff717171, 0xff4f4f4f, 0xff5e5e5f, 0xff565656, 0xff383838, 0xff2a2a2a, 0xff202020, 0xff191919, 0xff141414, 0xff101010, 0xff0c0c0c, 0xff090909, 0xff0a0a0a, 0xff0a0a0a, 0xff0b0b0b, 0xff0c0c0c, 0xff0d0d0d, 0xff101010, 0xff121212, 0xff131313, 0xff161616, 0xff161616, 0xff171718, 0xff181818, 0xff181818, 0xff181818, 0xff181818, 0xff757575, 0xff818181, 0xff303030, 0xff111111, 0xff0d0d0d, 0xff0b0b0b, 0xff080808, 0xff060606, 0xff050505, 0xff040404, 0xff030303, 0xff020202, 0xff020202, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff050505, 0xff070707, 0xff0a0a0a, 0xff0e0e0e, 0xff121212, 0xff151515, 0xff181818, 0xff1a1a1a, 0xff1c1c1c, 0xff232323, 0xff404040, 0xff404040, 0xffababac, 0xffa9a9aa, 0xffa8a8a8, 0xff8b8b8b, 0xffa5a5a6, 0xffa6a6a6, 0xffa6a6a8, 0xffa6a6a7, 0xffa7a7a8, 0xff7d7d7d, 0xff8c8c8c, 0xffa8a8a8, 0xffa7a7a8, 0xff7d7d7d, 0xff575757, 0xff4e4e4e, 0xff333333, 0xff282828, 0xff1c1c1c, 0xff121212, 0xff0d0d0d, 0xff0a0a0a, 0xff070707, 0xff050505, 0xff030303, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff060606, 0xff0c0c0c, 0xff131313, 0xff191919, 0xff202020, 0xff262626, 0xff2c2c2c, 0xff515152, 0xff868686, 0xff404040, 0xff696969, 0xff616161, 0xff878788, 0xffa8a8a9, 0xffa8a8a9, 0xff898989, 0xff5b5b5b, 0xff8a8a8a, 0xffa7a7a8, 0xffa8a8a8, 0xff8b8b8b, 0xff6e6e6e, 0xff6f6f6f, 0xff4d4d4d, 0xff5d5d5d, 0xff424242, 0xff393939, 0xff2c2c2c, 0xff202020, 0xff191919, 0xff151515, 0xff101010, 0xff0c0c0c, 0xff0c0c0c, 0xff0b0b0b, 0xff0c0c0c, 0xff0d0d0d, 0xff0e0e0e, 0xff101010, 0xff131313, 0xff161616, 0xff171717, 0xff191919, 0xff191919, 0xff1a1a1a, 0xff1b1b1b, 0xff1b1b1b, 0xff1b1b1b, 0xff777777, 0xff818181, 0xff737373, 0xff3a3a3a, 0xff393939, 0xff121212, 0xff0f0f0f, 0xff0b0b0b, 0xff090909, 0xff060606, 0xff050505, 0xff040404, 0xff030303, 0xff020202, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff050505, 0xff070707, 0xff0a0a0a, 0xff0d0d0d, 0xff111111, 0xff141414, 0xff171717, 0xff191919, 0xff1c1c1c, 0xff656565, 0xff3f3f3f, 0xff414141, 0xffa8a8ab, 0xffaaaaab, 0xffa8a8a9, 0xff8b8b8c, 0xff8b8b8b, 0xffa6a6a6, 0xffa7a7a8, 0xffa6a6a7, 0xff8c8c8c, 0xff8b8b8b, 0xffa7a7a7, 0xffa8a8a8, 0xffa8a8a8, 0xff707070, 0xff575757, 0xff535354, 0xff333333, 0xff282828, 0xff1b1b1b, 0xff111111, 0xff0c0c0c, 0xff0a0a0a, 0xff070707, 0xff040404, 0xff030303, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff070707, 0xff0c0c0c, 0xff131313, 0xff1a1a1a, 0xff202020, 0xff262626, 0xff2d2d2d, 0xff3a3a3a, 0xff868686, 0xff404040, 0xff696969, 0xff8b8b8b, 0xff878787, 0xff9c9c9c, 0xff919192, 0xff676767, 0xff5d5d5d, 0xff5e5e5e, 0xff8a8a8a, 0xff8b8b8b, 0xff8e8e8e, 0xff7a7a7a, 0xff707070, 0xff4d4d4d, 0xff5c5c5c, 0xff414141, 0xff3a3a3a, 0xff2c2c2c, 0xff202020, 0xff1a1a1a, 0xff151515, 0xff101010, 0xff0c0c0c, 0xff0b0b0b, 0xff0b0b0b, 0xff0c0c0c, 0xff0f0f0f, 0xff101010, 0xff131313, 0xff161616, 0xff191919, 0xff1a1a1a, 0xff1b1b1b, 0xff1d1d1d, 0xff1d1d1d, 0xff1d1d1d, 0xff1e1e1e, 0xff808080, 0xff3e3e3e, 0xff3e3e3e, 0xff7c7c7c, 0xff3d3d3d, 0xff818181, 0xff7f7f7f, 0xff131313, 0xff0f0f0f, 0xff0b0b0b, 0xff080808, 0xff060606, 0xff050505, 0xff030303, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff040404, 0xff060606, 0xff090909, 0xff0d0d0d, 0xff101010, 0xff131313, 0xff161616, 0xff191919, 0xff2a2a2a, 0xff828282, 0xff3e3e3e, 0xff404040, 0xffababad, 0xffaaaaab, 0xffa8a8a8, 0xff8c8c8c, 0xff959595, 0xff8c8c8c, 0xffa7a7a7, 0xff8c8c8c, 0xff909090, 0xff8b8b8b, 0xffa8a8a8, 0xffa8a8a8, 0xffa8a8a8, 0xff6d6d6d, 0xff616161, 0xff545454, 0xff4d4d4d, 0xff272727, 0xff1a1a1a, 0xff111111, 0xff0c0c0c, 0xff090909, 0xff060606, 0xff040404, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff070707, 0xff0d0d0d, 0xff131313, 0xff1a1a1a, 0xff202020, 0xff262626, 0xff2c2c2c, 0xff313131, 0xff878787, 0xff404042, 0xff686868, 0xff888888, 0xffa8a8a8, 0xff888889, 0xff707070, 0xff595959, 0xff5a5a5a, 0xff5b5b5b, 0xff7e7e7e, 0xffa7a7a8, 0xffa8a8a8, 0xff747474, 0xff5c5c5c, 0xff5c5c5c, 0xff5b5b5b, 0xff404040, 0xff383838, 0xff2c2c2c, 0xff202020, 0xff191919, 0xff141414, 0xff101010, 0xff0d0d0d, 0xff0c0c0c, 0xff0c0c0c, 0xff0d0d0d, 0xff101010, 0xff131313, 0xff161616, 0xff191919, 0xff1b1b1b, 0xff1d1d1d, 0xff1e1e1e, 0xff1f1f1f, 0xff202020, 0xff202020, 0xff828282, 0xff818181, 0xff404040, 0xff404040, 0xff292929, 0xff404040, 0xff3e3e3e, 0xff404040, 0xff818181, 0xff141414, 0xff101010, 0xff0b0b0b, 0xff080808, 0xff060606, 0xff040404, 0xff030303, 0xff020202, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff040404, 0xff060606, 0xff090909, 0xff0c0c0c, 0xff101010, 0xff131313, 0xff161616, 0xff181818, 0xff3f3f3f, 0xff3d3d3d, 0xff444444, 0xff404040, 0xffa4a4a5, 0xffa9a9aa, 0xffa8a8a8, 0xff8b8b8b, 0xffa7a7a7, 0xff8c8c8c, 0xff8c8c8c, 0xff8c8c8c, 0xffa6a6a7, 0xff8b8b8b, 0xffa7a7a7, 0xffa8a8a8, 0xffa8a8a8, 0xff6d6d6d, 0xff616161, 0xff535353, 0xff4d4d4d, 0xff303030, 0xff191919, 0xff101010, 0xff0c0c0c, 0xff090909, 0xff060606, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff070707, 0xff0d0d0d, 0xff131313, 0xff19191a, 0xff202020, 0xff262626, 0xff2b2b2b, 0xff303030, 0xff878787, 0xff505050, 0xff5d5d5d, 0xff5a5a5a, 0xffa9a9aa, 0xffa8a8a9, 0xff7e7e7e, 0xff585858, 0xff5a5a5a, 0xff5a5a5a, 0xff878787, 0xffa8a8a8, 0xffa7a7a8, 0xff8a8a8a, 0xff6e6e6e, 0xff6e6e6e, 0xff59595a, 0xff3f3f3f, 0xff373737, 0xff2b2b2b, 0xff202020, 0xff191919, 0xff151515, 0xff101010, 0xff0d0d0d, 0xff0c0c0c, 0xff0d0d0d, 0xff101010, 0xff121212, 0xff161616, 0xff191919, 0xff1c1c1c, 0xff1d1d1d, 0xff1f1f1f, 0xff202020, 0xff202020, 0xff212121, 0xff6e6e6e, 0xff828283, 0xff424242, 0xff2c2c2c, 0xff2c2c2c, 0xff2b2b2b, 0xff2b2b2b, 0xff303030, 0xff404040, 0xff3d3d3d, 0xff646464, 0xff313131, 0xff0e0e0e, 0xff0b0b0b, 0xff070707, 0xff050505, 0xff030303, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff040404, 0xff060606, 0xff090909, 0xff0c0c0c, 0xff0f0f0f, 0xff121212, 0xff151515, 0xff181818, 0xff7e7e7f, 0xff3d3d3d, 0xff3d3d3d, 0xff818181, 0xff353535, 0xffaaaaab, 0xffa8a8a8, 0xff8b8b8b, 0xffa7a7a8, 0xffa7a7a7, 0xff8e8e8e, 0xffa6a6a7, 0xffa7a7a8, 0xff8b8b8b, 0xffa8a8a8, 0xffa7a7a8, 0xff787878, 0xff4d4d4d, 0xff888888, 0xff404040, 0xff4b4b4b, 0xff838383, 0xff161616, 0xff0f0f0f, 0xff0b0b0b, 0xff080808, 0xff060606, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff070707, 0xff0c0c0c, 0xff131313, 0xff191919, 0xff202020, 0xff242425, 0xff2a2a2a, 0xff2f2f2f, 0xff868686, 0xff505050, 0xff525252, 0xff545454, 0xffa9a9aa, 0xffa9a9aa, 0xff5c5c5c, 0xff7d7d7d, 0xff676767, 0xff747474, 0xff5c5c5c, 0xff898989, 0xff898989, 0xff8a8a8a, 0xff5e5e5f, 0xff6d6d6d, 0xff585858, 0xff3d3d3d, 0xff353535, 0xff2a2a2a, 0xff1f1f1f, 0xff191919, 0xff141414, 0xff101010, 0xff0d0d0d, 0xff0c0c0c, 0xff0d0d0d, 0xff101010, 0xff141414, 0xff191919, 0xff1b1b1b, 0xff1e1e1e, 0xff202020, 0xff212121, 0xff222222, 0xff838383, 0xff838383, 0xff828282, 0xff434343, 0xff2d2d2d, 0xff313132, 0xff5c5c5c, 0xff5e5e5e, 0xff3a3a3a, 0xff2d2d2d, 0xff2b2b2b, 0xff404040, 0xff3d3d3d, 0xff3a3a3a, 0xff767676, 0xff0d0d0d, 0xff090909, 0xff060606, 0xff040404, 0xff030303, 0xff020202, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff040404, 0xff060606, 0xff090909, 0xff0c0c0c, 0xff0e0e0e, 0xff111111, 0xff141414, 0xff161616, 0xff818181, 0xff808080, 0xff818181, 0xff3d3d3d, 0xff424242, 0xff4f4f4f, 0xffa8a8a8, 0xff8b8b8b, 0xffa7a7a8, 0xffa6a6a7, 0xffa6a6a7, 0xffa6a6a7, 0xffa6a6a8, 0xff8e8e8e, 0xffa7a7a8, 0xffa8a8a8, 0xff595959, 0xff575757, 0xff474747, 0xff878787, 0xff5b5b5b, 0xff222222, 0xff141414, 0xff0e0e0e, 0xff0a0a0a, 0xff070707, 0xff050505, 0xff030303, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff070707, 0xff0c0c0c, 0xff121212, 0xff191919, 0xff1e1e1e, 0xff232323, 0xff272727, 0xff2d2d2d, 0xff868686, 0xff4f4f4f, 0xff767676, 0xff545454, 0xff878787, 0xff888888, 0xff888888, 0xff898989, 0xff59595a, 0xff898989, 0xff898989, 0xffa8a8a8, 0xff595959, 0xff595959, 0xff676767, 0xff6c6c6c, 0xff575757, 0xff393939, 0xff333333, 0xff272727, 0xff1f1f1f, 0xff181818, 0xff131313, 0xff101010, 0xff0d0d0d, 0xff0c0c0c, 0xff0f0f0f, 0xff131313, 0xff171717, 0xff1a1a1a, 0xff1d1d1d, 0xff202020, 0xff212121, 0xff232323, 0xff232323, 0xff434343, 0xff444444, 0xff3a3a3a, 0xff2f2f2f, 0xff2f2f2f, 0xff818181, 0xff515151, 0xff5f5f5f, 0xff505050, 0xff6a6a6a, 0xff717171, 0xff424242, 0xff404040, 0xff3d3d3d, 0xff393939, 0xff101010, 0xff0b0b0b, 0xff080808, 0xff050505, 0xff030303, 0xff020202, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff040404, 0xff060606, 0xff080808, 0xff0b0b0b, 0xff0d0d0d, 0xff101010, 0xff131313, 0xff151515, 0xff171717, 0xff5d5d5d, 0xff747474, 0xff3e3e3e, 0xff444444, 0xff868686, 0xff7b7b7b, 0xff8b8b8b, 0xffa7a7a8, 0xffa6a6a7, 0xffa6a6a7, 0xffa6a6a8, 0xffa7a7a8, 0xff8b8b8b, 0xffa7a7a8, 0xff5b5b5b, 0xff888889, 0xff565656, 0xff535353, 0xff878787, 0xff282828, 0xff1c1c1c, 0xff121212, 0xff0c0c0c, 0xff090909, 0xff060606, 0xff040404, 0xff030303, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff030303, 0xff070707, 0xff0c0c0c, 0xff111111, 0xff171717, 0xff1d1d1d, 0xff222222, 0xff262626, 0xff2a2a2a, 0xff868686, 0xff4e4e4e, 0xffa8a8a9, 0xff525252, 0xff888888, 0xffa9a9aa, 0xffa9a9aa, 0xff575757, 0xff575757, 0xff575758, 0xffa3a3a4, 0xffa8a8a8, 0xff575757, 0xff575757, 0xffa9a9aa, 0xff6a6a6a, 0xff525252, 0xff363636, 0xff2f2f2f, 0xff242425, 0xff1d1d1d, 0xff161616, 0xff131313, 0xff101010, 0xff0c0c0c, 0xff0d0d0d, 0xff101010, 0xff141414, 0xff191919, 0xff1d1d1d, 0xff1f1f1f, 0xff212121, 0xff232323, 0xff232324, 0xff404040, 0xff444444, 0xff414141, 0xff303030, 0xff818181, 0xff848484, 0xff616161, 0xff616161, 0xff595959, 0xff606060, 0xff4d4d4d, 0xff848484, 0xff2d2d2d, 0xff373737, 0xff3f3f3f, 0xff3b3b3b, 0xff161616, 0xff0c0c0c, 0xff090909, 0xff060606, 0xff040404, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff030303, 0xff060606, 0xff080808, 0xff0a0a0a, 0xff0d0d0d, 0xff101010, 0xff121212, 0xff141414, 0xff161616, 0xff181818, 0xff191919, 0xff777777, 0xff838383, 0xff363636, 0xff535353, 0xff898989, 0xffa8a8a8, 0xffa7a7a7, 0xffa7a7a8, 0xffa7a7a7, 0xffa8a8a8, 0xff6f6f6f, 0xff4d4d4d, 0xff494949, 0xff464646, 0xff878787, 0xff858585, 0xff393939, 0xff232323, 0xff181818, 0xff101010, 0xff0b0b0b, 0xff090909, 0xff060606, 0xff040404, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff030303, 0xff060606, 0xff0b0b0b, 0xff101010, 0xff161616, 0xff1b1b1c, 0xff202020, 0xff242424, 0xff282828, 0xff828282, 0xff4d4d4d, 0xffababab, 0xff525252, 0xff545454, 0xffa8a8a8, 0xffa9a9a9, 0xff545454, 0xff565656, 0xff646464, 0xffa8a8a9, 0xffa8a8a8, 0xff555555, 0xff848484, 0xffaaaaaa, 0xff686868, 0xff505050, 0xff313131, 0xff2b2b2b, 0xff232323, 0xff1b1b1b, 0xff161616, 0xff111111, 0xff0f0f0f, 0xff0c0c0c, 0xff0e0e0e, 0xff111111, 0xff161616, 0xff1a1a1a, 0xff1e1e1e, 0xff202020, 0xff232323, 0xff242424, 0xff262626, 0xff848484, 0xff464646, 0xff383838, 0xff7b7b7b, 0xff848484, 0xff616161, 0xff616161, 0xff616161, 0xff787878, 0xff474747, 0xff606060, 0xff5f5f5f, 0xff838383, 0xff303030, 0xff383838, 0xff3d3d3d, 0xff747474, 0xff0f0f0f, 0xff090909, 0xff060606, 0xff050505, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff030303, 0xff050505, 0xff070707, 0xff090909, 0xff0c0c0c, 0xff0f0f0f, 0xff111111, 0xff131313, 0xff151515, 0xff161616, 0xff181818, 0xff818181, 0xff2a2a2a, 0xff464646, 0xff4f4f4f, 0xff4a4a4a, 0xffa8a8a8, 0xffa7a7a8, 0xffa8a8a8, 0xffa8a8a8, 0xff989898, 0xff4b4b4b, 0xff4b4b4b, 0xff464646, 0xff555555, 0xff474747, 0xff313131, 0xff292929, 0xff1e1e1e, 0xff141414, 0xff0d0d0e, 0xff0a0a0a, 0xff080808, 0xff060606, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff030303, 0xff060606, 0xff0a0a0a, 0xff0f0f0f, 0xff141414, 0xff191919, 0xff1e1e1e, 0xff222222, 0xff262626, 0xff7f7f7f, 0xff4a4a4a, 0xffababab, 0xffa5a5a6, 0xff505050, 0xff8e8e8e, 0xffa9a9a9, 0xff878787, 0xff565656, 0xff848484, 0xffa9a9a9, 0xff9b9b9b, 0xff535353, 0xffaaaaab, 0xffaaaaab, 0xff676767, 0xff4d4d4d, 0xff2d2d2d, 0xff272727, 0xff202020, 0xff191919, 0xff141414, 0xff101010, 0xff0e0e0e, 0xff0c0c0c, 0xff0e0e0e, 0xff131313, 0xff181818, 0xff1c1c1c, 0xff202020, 0xff222222, 0xff232323, 0xff2d2d2d, 0xff848484, 0xff4d4d4d, 0xff323232, 0xff333334, 0xff858585, 0xff5d5d5e, 0xff626262, 0xff616162, 0xff4a4a4a, 0xffa9a9aa, 0xff747474, 0xff474747, 0xff474747, 0xff848484, 0xff848484, 0xff2d2d2d, 0xff414141, 0xff818181, 0xff232323, 0xff0a0a0a, 0xff070707, 0xff050505, 0xff030303, 0xff020202, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff030303, 0xff050505, 0xff060606, 0xff090909, 0xff0c0c0c, 0xff0e0e0e, 0xff101010, 0xff121212, 0xff141414, 0xff161616, 0xff171717, 0xff1d1d1d, 0xff767676, 0xff434343, 0xff4a4a4a, 0xff3d3d3d, 0xff464646, 0xff646464, 0xff9c9c9c, 0xffa5a5a6, 0xff5c5c5c, 0xff525252, 0xff464647, 0xff545454, 0xff545454, 0xff818181, 0xff2c2c2c, 0xff232323, 0xff191919, 0xff101010, 0xff0c0c0c, 0xff090909, 0xff070707, 0xff050505, 0xff030303, 0xff020202, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff060606, 0xff090909, 0xff0d0d0d, 0xff131313, 0xff181818, 0xff1d1d1d, 0xff202020, 0xff232323, 0xff7b7b7b, 0xff484848, 0xffababac, 0xffababab, 0xff4f4f4f, 0xff878787, 0xffa9a9aa, 0xffa6a6a6, 0xff686868, 0xff999999, 0xffa9a9aa, 0xff7c7c7c, 0xff505050, 0xffaaaaaa, 0xffaaaaab, 0xff646464, 0xff4a4a4a, 0xff292929, 0xff232323, 0xff1d1d1d, 0xff181818, 0xff131313, 0xff0f0f0f, 0xff0d0d0d, 0xff0d0d0d, 0xff101010, 0xff141414, 0xff191919, 0xff1d1d1d, 0xff202020, 0xff232323, 0xff434343, 0xff848484, 0xff777777, 0xff474747, 0xff333333, 0xff818181, 0xff858585, 0xff626262, 0xff5f5f60, 0xff595959, 0xffababac, 0xffababab, 0xffababab, 0xff717171, 0xff5e5e5e, 0xff848484, 0xff5e5e5e, 0xff4e4e4e, 0xff2b2b2b, 0xff3b3b3b, 0xff7b7b7b, 0xff7e7e7e, 0xff080808, 0xff060606, 0xff040404, 0xff030303, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff020202, 0xff030303, 0xff040404, 0xff060606, 0xff080808, 0xff0b0b0b, 0xff0d0d0d, 0xff0f0f0f, 0xff111111, 0xff131313, 0xff151515, 0xff161616, 0xff171718, 0xff818181, 0xff3f3f3f, 0xff444445, 0xff4a4a4a, 0xff3d3d3d, 0xff424242, 0xff464646, 0xff464646, 0xff454545, 0xff444444, 0xff535353, 0xff878787, 0xff868686, 0xff303030, 0xff252525, 0xff1c1c1c, 0xff131313, 0xff0e0e0e, 0xff0b0b0b, 0xff090909, 0xff060606, 0xff040404, 0xff030303, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff050505, 0xff080808, 0xff0c0c0c, 0xff111111, 0xff161616, 0xff1a1a1a, 0xff1e1e1e, 0xff202021, 0xff7b7b7b, 0xff474747, 0xffababab, 0xffacacac, 0xff929293, 0xff4e4e4e, 0xffaaaaaa, 0xffaaaaab, 0xff666667, 0xffababab, 0xffaaaaab, 0xff747474, 0xff878787, 0xffababab, 0xff858585, 0xff626262, 0xff474747, 0xff242424, 0xff202020, 0xff1b1b1b, 0xff151515, 0xff111111, 0xff0e0e0e, 0xff0c0c0c, 0xff0c0c0c, 0xff101010, 0xff161616, 0xff1b1b1b, 0xff1f1f1f, 0xff212121, 0xff232323, 0xff262626, 0xff3d3d3d, 0xff6e6e6e, 0xff484848, 0xff353535, 0xff848484, 0xff5c5c5c, 0xff636363, 0xff575757, 0xff898989, 0xff878787, 0xffababab, 0xff888888, 0xff8a8a8a, 0xffababac, 0xff848484, 0xff5d5d5d, 0xff5e5e5e, 0xff2c2c2c, 0xff3d3d3d, 0xff373737, 0xff323232, 0xff090909, 0xff060606, 0xff040404, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff030304, 0xff060606, 0xff070707, 0xff090909, 0xff0c0c0c, 0xff0e0e0e, 0xff101010, 0xff121212, 0xff131313, 0xff151515, 0xff161616, 0xff181818, 0xff373737, 0xff595959, 0xff797979, 0xff838383, 0xff5b5b5b, 0xff3d3d3d, 0xff3f3f3f, 0xff404040, 0xff505050, 0xff747475, 0xff303030, 0xff2b2b2b, 0xff252525, 0xff1d1d1d, 0xff161616, 0xff101010, 0xff0c0c0c, 0xff0a0a0a, 0xff080808, 0xff060606, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff040404, 0xff070707, 0xff0b0b0b, 0xff101010, 0xff131313, 0xff181818, 0xff1c1c1c, 0xff1f1f1f, 0xff7e7e7e, 0xff434343, 0xff888888, 0xffababac, 0xff9c9c9c, 0xff626262, 0xffababab, 0xffababab, 0xff646464, 0xffaaaaab, 0xffababab, 0xff646464, 0xffa7a7a8, 0xff868686, 0xff848484, 0xff5f5f5f, 0xff434344, 0xff222222, 0xff1d1d1d, 0xff191919, 0xff141414, 0xff101010, 0xff0d0d0d, 0xff0c0c0c, 0xff0d0d0d, 0xff101010, 0xff161616, 0xff1b1b1b, 0xff202020, 0xff232323, 0xff242424, 0xff262626, 0xff282828, 0xff848484, 0xff4a4a4a, 0xff373737, 0xff858585, 0xff616161, 0xff646464, 0xffababac, 0xffababac, 0xff858585, 0xffababab, 0xff858585, 0xffababab, 0xffababab, 0xffababab, 0xff616161, 0xff5f5f5f, 0xff2d2d2d, 0xff3d3d3d, 0xff373737, 0xff101010, 0xff090909, 0xff060606, 0xff040405, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff030303, 0xff050505, 0xff060606, 0xff090909, 0xff0b0b0b, 0xff0d0d0d, 0xff0f0f0f, 0xff101011, 0xff131313, 0xff141414, 0xff151515, 0xff161616, 0xff181818, 0xff1a1a1a, 0xff3a3a3a, 0xff838383, 0xff848484, 0xff353535, 0xff373737, 0xff373737, 0xff858585, 0xff2b2b2b, 0xff282828, 0xff232323, 0xff1d1d1d, 0xff171717, 0xff121212, 0xff0e0e0e, 0xff0b0b0b, 0xff090909, 0xff070707, 0xff050505, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff040404, 0xff060606, 0xff0a0a0a, 0xff0e0e0e, 0xff121212, 0xff161616, 0xff191919, 0xff1d1d1d, 0xff7f7f7f, 0xff414142, 0xff838383, 0xff8c8c8c, 0xffa7a7a7, 0xff626262, 0xffababab, 0xffababab, 0xff818181, 0xffa8a8a8, 0xffababac, 0xff616161, 0xff9e9e9f, 0xff848484, 0xffacacac, 0xff5d5d5d, 0xff424242, 0xff1f1f1f, 0xff1b1b1b, 0xff161616, 0xff111111, 0xff0e0e0e, 0xff0c0c0c, 0xff0c0c0c, 0xff0d0d0d, 0xff121212, 0xff161616, 0xff1c1c1c, 0xff202020, 0xff232323, 0xff252525, 0xff262626, 0xff292929, 0xff464647, 0xff4a4a4a, 0xff373737, 0xff646464, 0xff646464, 0xff4d4d4d, 0xffababab, 0xffababab, 0xff858586, 0xff575757, 0xff868686, 0xffababab, 0xffababab, 0xffababab, 0xff616161, 0xff606060, 0xff2d2d2d, 0xff414141, 0xff333333, 0xff0c0c0c, 0xff090909, 0xff070707, 0xff050505, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff030303, 0xff040404, 0xff060606, 0xff080808, 0xff090909, 0xff0c0c0c, 0xff0e0e0e, 0xff101010, 0xff111111, 0xff131313, 0xff141414, 0xff151515, 0xff161616, 0xff181818, 0xff191919, 0xff5f5f5f, 0xff838383, 0xff2c2c2c, 0xff434343, 0xff2e2e2e, 0xff262626, 0xff222222, 0xff202020, 0xff1b1b1b, 0xff161616, 0xff131313, 0xff0f0f0f, 0xff0c0c0c, 0xff0a0a0a, 0xff090909, 0xff060606, 0xff050505, 0xff030303, 0xff020202, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff040404, 0xff060606, 0xff090909, 0xff0c0c0c, 0xff101010, 0xff141414, 0xff171717, 0xff1a1a1a, 0xff7f7f7f, 0xff404040, 0xffadadae, 0xff838383, 0xff868686, 0xff5f5f5f, 0xffacacad, 0xffababac, 0xff616161, 0xffababab, 0xffababac, 0xff606060, 0xff848484, 0xffababac, 0xffacacad, 0xff5d5d5d, 0xff424242, 0xff1d1d1d, 0xff181818, 0xff131313, 0xff101010, 0xff0c0c0c, 0xff0b0b0b, 0xff0c0c0c, 0xff0d0d0d, 0xff121212, 0xff171717, 0xff1c1c1c, 0xff202020, 0xff232323, 0xff252525, 0xff272727, 0xff2a2a2a, 0xff4e4e4e, 0xff848484, 0xff383838, 0xff646464, 0xff5b5b5b, 0xff868686, 0xffababab, 0xffababac, 0xff858585, 0xff4b4b4b, 0xff848484, 0xffababab, 0xffababab, 0xff858585, 0xff5c5c5c, 0xff5d5d5e, 0xff2d2d2d, 0xff3e3e3e, 0xff131313, 0xff0c0c0c, 0xff090909, 0xff070707, 0xff050505, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff030303, 0xff050505, 0xff060606, 0xff090909, 0xff0b0b0b, 0xff0c0c0c, 0xff0e0e0e, 0xff101010, 0xff111111, 0xff131313, 0xff141414, 0xff151515, 0xff161616, 0xff161616, 0xff171717, 0xff7f7f7f, 0xff4d4d4d, 0xff3b3b3b, 0xff1d1d1d, 0xff1c1c1c, 0xff1a1a1a, 0xff181818, 0xff161616, 0xff131313, 0xff0f0f0f, 0xff0d0d0d, 0xff0c0c0c, 0xff090909, 0xff080808, 0xff060606, 0xff050505, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff020202, 0xff030303, 0xff040404, 0xff060606, 0xff080808, 0xff0c0c0c, 0xff0f0f0f, 0xff121212, 0xff161616, 0xff191919, 0xff7e7e7e, 0xff3e3e3e, 0xffadadae, 0xffadadad, 0xff838383, 0xff5d5d5d, 0xffa1a1a1, 0xffababac, 0xff6e6e6e, 0xffababac, 0xff848484, 0xff5e5e5e, 0xff868687, 0xffadadae, 0xffadadae, 0xff5b5b5b, 0xff404040, 0xff1a1a1a, 0xff161616, 0xff121212, 0xff0d0d0d, 0xff0c0c0c, 0xff0a0a0a, 0xff0c0c0c, 0xff0e0e0e, 0xff121212, 0xff181818, 0xff1d1d1d, 0xff202020, 0xff232323, 0xff252526, 0xff272727, 0xff2a2a2a, 0xff363636, 0xff848484, 0xff393939, 0xff656565, 0xff888888, 0xff868686, 0xff9b9b9b, 0xff909091, 0xff5c5c5c, 0xff4e4e4e, 0xff4e4e4e, 0xff858585, 0xff868686, 0xff898989, 0xff6f6f6f, 0xff606060, 0xff2c2c2c, 0xff3c3c3c, 0xff131313, 0xff0c0c0c, 0xff090909, 0xff070707, 0xff050505, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff030303, 0xff040404, 0xff060606, 0xff070707, 0xff090909, 0xff0b0b0b, 0xff0c0c0d, 0xff0f0f0f, 0xff101010, 0xff111111, 0xff131313, 0xff131313, 0xff141414, 0xff151515, 0xff161616, 0xff161616, 0xff161616, 0xff161616, 0xff161616, 0xff161616, 0xff151515, 0xff131313, 0xff121212, 0xff101010, 0xff0e0e0e, 0xff0c0c0c, 0xff0b0b0b, 0xff090909, 0xff080808, 0xff060606, 0xff050505, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff020202, 0xff010101, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff020202, 0xff030303, 0xff040404, 0xff060606, 0xff080808, 0xff0a0a0a, 0xff0e0e0e, 0xff101010, 0xff131313, 0xff161616, 0xff7e7e7e, 0xff3d3d3d, 0xffababac, 0xffadadae, 0xffacacad, 0xff5c5c5c, 0xff838383, 0xffadadae, 0xff838383, 0xff9e9e9e, 0xff838383, 0xff7f7f7f, 0xffadadae, 0xffadadad, 0xffacacad, 0xff5a5a5a, 0xff3d3d3d, 0xff171717, 0xff131313, 0xff0f0f10, 0xff0c0c0c, 0xff0a0a0a, 0xff0b0b0b, 0xff0c0c0c, 0xff0f0f0f, 0xff131313, 0xff181818, 0xff1d1d1d, 0xff202020, 0xff232323, 0xff262626, 0xff272727, 0xff2a2a2a, 0xff2e2e2e, 0xff858585, 0xff3b3b3c, 0xff646464, 0xff878787, 0xffaaaaab, 0xff868686, 0xff696969, 0xff4b4b4b, 0xff4a4a4a, 0xff4a4a4a, 0xff767676, 0xffababab, 0xffababab, 0xff696969, 0xff474747, 0xff414141, 0xff3a3a3a, 0xff111111, 0xff0c0c0c, 0xff090909, 0xff070707, 0xff050505, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff030303, 0xff030303, 0xff050505, 0xff060606, 0xff080808, 0xff090909, 0xff0c0c0c, 0xff0d0d0d, 0xff0f0f0f, 0xff101010, 0xff111111, 0xff121212, 0xff131313, 0xff131313, 0xff141414, 0xff141414, 0xff141414, 0xff141414, 0xff131313, 0xff131313, 0xff121212, 0xff111111, 0xff101010, 0xff0e0e0e, 0xff0d0d0d, 0xff0c0c0c, 0xff0a0a0a, 0xff090909, 0xff080808, 0xff070707, 0xff060606, 0xff050505, 0xff040404, 0xff040404, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff010101, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff020202, 0xff030303, 0xff040404, 0xff060606, 0xff070707, 0xff0a0a0a, 0xff0c0c0c, 0xff101010, 0xff131313, 0xff151515, 0xff7e7e7e, 0xff3c3c3c, 0xff818181, 0xffadadae, 0xffacacac, 0xff5a5a5a, 0xff828282, 0xff8f8f8f, 0xff838383, 0xff838383, 0xffababab, 0xff5d5d5d, 0xffadadae, 0xffadadae, 0xffadadae, 0xff5a5a5a, 0xff3c3c3c, 0xff151515, 0xff111111, 0xff0e0e0e, 0xff0c0c0c, 0xff0b0b0b, 0xff0b0b0b, 0xff0c0c0c, 0xff101010, 0xff141414, 0xff181818, 0xff1d1d1d, 0xff202020, 0xff232323, 0xff262626, 0xff272727, 0xff2a2a2a, 0xff2d2d2d, 0xff858585, 0xff4d4d4d, 0xff585858, 0xff545454, 0xffababab, 0xffababab, 0xff797979, 0xff4b4b4b, 0xff4c4c4c, 0xff4a4a4a, 0xff818181, 0xffababab, 0xffababab, 0xff858585, 0xff5e5e5e, 0xff5a5a5a, 0xff393939, 0xff101010, 0xff0c0c0c, 0xff090909, 0xff070707, 0xff050505, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff030303, 0xff040404, 0xff060606, 0xff070707, 0xff090909, 0xff0a0a0a, 0xff0c0c0c, 0xff0d0d0d, 0xff0e0e0e, 0xff101010, 0xff101010, 0xff111111, 0xff121212, 0xff131313, 0xff131313, 0xff131313, 0xff131313, 0xff121212, 0xff111111, 0xff101010, 0xff101010, 0xff0f0f0f, 0xff0e0e0e, 0xff0c0c0c, 0xff0b0b0b, 0xff0a0a0a, 0xff090909, 0xff090909, 0xff080808, 0xff060606, 0xff060606, 0xff060606, 0xff060606, 0xff050505, 0xff050505, 0xff040404, 0xff030303, 0xff030303, 0xff030303, 0xff020202, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff020202, 0xff030303, 0xff040404, 0xff060606, 0xff070707, 0xff090909, 0xff0c0c0c, 0xff0f0f0f, 0xff111111, 0xff131313, 0xff7e7e7e, 0xff3a3a3a, 0xff9b9b9b, 0xff818181, 0xffadadae, 0xff5a5a5a, 0xffaeaeae, 0xff828282, 0xff828282, 0xff828282, 0xffababac, 0xff5b5b5b, 0xffadadae, 0xffa9a9aa, 0xff818181, 0xff585858, 0xff3b3b3b, 0xff131313, 0xff101010, 0xff0d0d0d, 0xff0b0b0b, 0xff0b0b0b, 0xff0c0c0c, 0xff0d0d0d, 0xff101010, 0xff141414, 0xff191919, 0xff1d1d1d, 0xff202020, 0xff232323, 0xff262626, 0xff272727, 0xff2a2a2a, 0xff2c2c2c, 0xff858585, 0xff4c4c4c, 0xff4d4d4d, 0xff4d4d4d, 0xffababab, 0xffababab, 0xff525252, 0xff777777, 0xff5d5d5d, 0xff6a6a6a, 0xff4d4d4d, 0xff858585, 0xff858585, 0xff848484, 0xff4a4a4a, 0xff585858, 0xff373737, 0xff101010, 0xff0c0c0c, 0xff090909, 0xff070707, 0xff050505, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff030303, 0xff030303, 0xff040404, 0xff060606, 0xff070707, 0xff090909, 0xff0a0a0a, 0xff0b0b0b, 0xff0c0c0c, 0xff0e0e0e, 0xff0f0f0f, 0xff101010, 0xff101010, 0xff101010, 0xff111111, 0xff111111, 0xff111111, 0xff101010, 0xff101010, 0xff101010, 0xff0f0f0f, 0xff0e0e0e, 0xff0c0c0c, 0xff0c0c0c, 0xff0c0c0c, 0xff0b0b0b, 0xff0a0a0a, 0xff0a0a0a, 0xff090909, 0xff090909, 0xff717171, 0xff7e7e7e, 0xff272727, 0xff070707, 0xff060606, 0xff060606, 0xff050505, 0xff040404, 0xff030303, 0xff030303, 0xff020202, 0xff010101, 0xff010101, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff040404, 0xff060606, 0xff070707, 0xff090909, 0xff0c0c0c, 0xff0e0e0e, 0xff101010, 0xff131313, 0xff7e7e7e, 0xff3a3a3a, 0xffaeaeae, 0xff878787, 0xff818181, 0xff595959, 0xffaeaeae, 0xff848484, 0xff838383, 0xffacacad, 0xffadadae, 0xff5d5d5d, 0xff959596, 0xff818181, 0xffa4a4a4, 0xff575757, 0xff3a3a3a, 0xff121212, 0xff0f0f0f, 0xff0c0c0c, 0xff0b0b0b, 0xff0c0c0c, 0xff0c0c0c, 0xff0e0e0e, 0xff101010, 0xff141414, 0xff191919, 0xff1d1d1d, 0xff202020, 0xff232323, 0xff262626, 0xff272727, 0xff292929, 0xff2b2b2b, 0xff858585, 0xff4b4b4b, 0xff737373, 0xff4d4d4d, 0xff858585, 0xff858585, 0xff878787, 0xff858585, 0xff4c4c4c, 0xff858585, 0xff868686, 0xffababab, 0xff484848, 0xff454545, 0xff535353, 0xff575757, 0xff373737, 0xff101010, 0xff0c0c0c, 0xff090909, 0xff060606, 0xff050505, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff030303, 0xff030303, 0xff050505, 0xff060606, 0xff070707, 0xff090909, 0xff090909, 0xff0b0b0b, 0xff0c0c0c, 0xff0d0d0d, 0xff0e0e0e, 0xff0f0f0f, 0xff0f0f0f, 0xff0f0f0f, 0xff0f0f0f, 0xff0f0f0f, 0xff0f0f0f, 0xff0e0e0e, 0xff0e0e0e, 0xff0e0e0e, 0xff0d0d0d, 0xff0c0c0c, 0xff0c0c0c, 0xff0c0c0c, 0xff0c0c0c, 0xff0c0c0c, 0xff0c0c0c, 0xff0c0c0c, 0xff727272, 0xff7e7e7e, 0xff6e6e6e, 0xff303030, 0xff303030, 0xff090909, 0xff080808, 0xff060606, 0xff060606, 0xff040404, 0xff030303, 0xff030303, 0xff020202, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff040404, 0xff060606, 0xff070707, 0xff090909, 0xff0c0c0c, 0xff0e0e0e, 0xff101010, 0xff121212, 0xff7c7c7c, 0xff393939, 0xffaeaeaf, 0xffaeaeae, 0xff818181, 0xff585858, 0xff818181, 0xffaeaeae, 0xffadadae, 0xffadadae, 0xffadadae, 0xff595959, 0xff818181, 0xffaeaeae, 0xffaeaeae, 0xff575757, 0xff393939, 0xff111111, 0xff0e0e0e, 0xff0c0c0c, 0xff0c0c0c, 0xff0c0c0c, 0xff0c0c0c, 0xff0e0e0e, 0xff111111, 0xff141414, 0xff171717, 0xff1c1c1c, 0xff202020, 0xff232323, 0xff252525, 0xff262626, 0xff292929, 0xff2a2a2a, 0xff858585, 0xff4a4a4a, 0xffaaaaab, 0xff4c4c4c, 0xff858585, 0xffababab, 0xffababab, 0xff4c4c4c, 0xff4c4c4c, 0xff4b4b4b, 0xffa5a5a5, 0xffababac, 0xff474747, 0xff424242, 0xffaeaeae, 0xff565656, 0xff343434, 0xff101010, 0xff0c0c0c, 0xff090909, 0xff060606, 0xff040404, 0xff030303, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff030303, 0xff030303, 0xff050505, 0xff060606, 0xff070707, 0xff080808, 0xff090909, 0xff0a0a0a, 0xff0b0b0b, 0xff0c0c0c, 0xff0c0c0c, 0xff0d0d0d, 0xff0d0d0d, 0xff0d0d0d, 0xff0d0d0d, 0xff0d0d0d, 0xff0d0d0d, 0xff0d0d0d, 0xff0d0d0d, 0xff0d0d0d, 0xff0d0d0d, 0xff0d0d0d, 0xff0e0e0e, 0xff0e0e0e, 0xff0f0f0f, 0xff0f0f0f, 0xff7c7c7c, 0xff333333, 0xff333333, 0xff797979, 0xff333333, 0xff7e7e7e, 0xff7c7c7c, 0xff0a0a0a, 0xff090909, 0xff070707, 0xff060606, 0xff050505, 0xff030303, 0xff030303, 0xff020202, 0xff010101, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff040404, 0xff060606, 0xff070707, 0xff090909, 0xff0c0c0c, 0xff0d0d0d, 0xff101010, 0xff111111, 0xff7b7b7b, 0xff373737, 0xffaeaeae, 0xffaeaeaf, 0xffaeaeae, 0xff585858, 0xff818181, 0xff838383, 0xffaeaeae, 0xffaeaeae, 0xff828282, 0xff585858, 0xffaeaeae, 0xffaeaeae, 0xffababab, 0xff565656, 0xff373737, 0xff101010, 0xff0d0d0d, 0xff0b0b0b, 0xff0c0c0c, 0xff0c0c0c, 0xff0d0d0d, 0xff0f0f0f, 0xff111111, 0xff141414, 0xff171717, 0xff1b1b1b, 0xff1f1f1f, 0xff222222, 0xff242424, 0xff262626, 0xff282828, 0xff2a2a2a, 0xff838384, 0xff4a4a4a, 0xffababab, 0xff4c4c4c, 0xff4d4d4d, 0xffaaaaaa, 0xffababab, 0xff4c4c4c, 0xff4c4c4c, 0xff5b5b5b, 0xffababab, 0xffaaaaab, 0xff424242, 0xff7b7b7b, 0xffadadae, 0xff565656, 0xff363636, 0xff0f0f0f, 0xff0c0c0c, 0xff090909, 0xff060606, 0xff040404, 0xff030303, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff030303, 0xff040404, 0xff060606, 0xff060606, 0xff080808, 0xff090909, 0xff090909, 0xff0a0a0a, 0xff0a0a0a, 0xff0b0b0b, 0xff0b0b0b, 0xff0b0b0b, 0xff0c0c0c, 0xff0c0c0c, 0xff0c0c0c, 0xff0c0c0c, 0xff0c0c0c, 0xff0d0d0d, 0xff0e0e0e, 0xff0f0f0f, 0xff101010, 0xff101010, 0xff111111, 0xff7f7f7f, 0xff7f7f7f, 0xff363636, 0xff363636, 0xff1b1b1b, 0xff353535, 0xff343434, 0xff373737, 0xff7e7e7e, 0xff0b0b0b, 0xff090909, 0xff070707, 0xff060606, 0xff040404, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff010101, 0xff020202, 0xff030303, 0xff040404, 0xff060606, 0xff070707, 0xff090909, 0xff0b0b0b, 0xff0d0d0d, 0xff0f0f0f, 0xff111111, 0xff7d7d7d, 0xff373737, 0xffaeaeaf, 0xffaeaeaf, 0xffaeaeae, 0xff575757, 0xffaeaeae, 0xff818181, 0xffa5a5a5, 0xff818181, 0xff818181, 0xff818181, 0xffaeaeae, 0xffaeaeaf, 0xffafafb0, 0xff555555, 0xff363636, 0xff101010, 0xff0d0d0d, 0xff0b0b0b, 0xff0c0c0c, 0xff0c0c0c, 0xff0d0d0d, 0xff0f0f0f, 0xff111111, 0xff131313, 0xff161616, 0xff1a1a1a, 0xff1e1e1e, 0xff212121, 0xff242424, 0xff262626, 0xff272727, 0xff292929, 0xff808080, 0xff494949, 0xffacacac, 0xffa7a7a7, 0xff4b4b4b, 0xff8e8e8e, 0xffababab, 0xff848484, 0xff4d4d4d, 0xff7f7f7f, 0xffababad, 0xff9b9b9b, 0xff3e3e3e, 0xffafafaf, 0xffaeaeaf, 0xff555555, 0xff353535, 0xff0f0f0f, 0xff0c0c0c, 0xff090909, 0xff060606, 0xff040404, 0xff030303, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff030303, 0xff040404, 0xff050505, 0xff060606, 0xff070707, 0xff080808, 0xff080808, 0xff090909, 0xff090909, 0xff090909, 0xff090909, 0xff090909, 0xff0a0a0a, 0xff0c0c0c, 0xff0c0c0c, 0xff0d0d0d, 0xff0f0f0f, 0xff101010, 0xff101010, 0xff121212, 0xff131313, 0xff686868, 0xff808080, 0xff383838, 0xff202020, 0xff1f1f1f, 0xff1e1e1e, 0xff1d1d1d, 0xff232323, 0xff353535, 0xff333333, 0xff5f5f5f, 0xff2a2a2a, 0xff090909, 0xff070707, 0xff060606, 0xff040404, 0xff030303, 0xff020202, 0xff020202, 0xff010101, 0xff020202, 0xff030303, 0xff040404, 0xff060606, 0xff070707, 0xff090909, 0xff0b0b0b, 0xff0d0d0d, 0xff0f0f0f, 0xff101010, 0xff7e7e7e, 0xff373737, 0xff8e8e8e, 0xffaeaeaf, 0xffaeaeaf, 0xff575757, 0xffaeaeaf, 0xffaaaaaa, 0xff878787, 0xff818181, 0xffaeaeae, 0xff575757, 0xffaeaeaf, 0xffafafb0, 0xff9b9b9b, 0xff545454, 0xff343434, 0xff0f0f0f, 0xff0c0c0c, 0xff0c0c0c, 0xff0c0c0c, 0xff0c0c0c, 0xff0d0d0d, 0xff0f0f0f, 0xff111111, 0xff131313, 0xff161616, 0xff191919, 0xff1d1d1d, 0xff202020, 0xff232323, 0xff252525, 0xff262626, 0xff282828, 0xff7c7c7c, 0xff484848, 0xffababac, 0xffababab, 0xff4a4a4a, 0xff868686, 0xffababab, 0xffa7a7a7, 0xff616161, 0xff989898, 0xffadadae, 0xff747474, 0xff3c3c3c, 0xffaeaeae, 0xffaeaeaf, 0xff545454, 0xff343434, 0xff0e0e0e, 0xff0b0b0b, 0xff080808, 0xff060606, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff030303, 0xff040404, 0xff040404, 0xff050505, 0xff060606, 0xff060606, 0xff070707, 0xff070707, 0xff070707, 0xff080808, 0xff090909, 0xff0a0a0a, 0xff0b0b0b, 0xff0c0c0c, 0xff0e0e0e, 0xff101010, 0xff111111, 0xff131313, 0xff818181, 0xff818181, 0xff808080, 0xff3a3a3a, 0xff222222, 0xff262627, 0xff555555, 0xff575757, 0xff2f2f2f, 0xff1f1f20, 0xff1d1d1d, 0xff363636, 0xff343434, 0xff323232, 0xff747474, 0xff090909, 0xff070707, 0xff050505, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff020202, 0xff030303, 0xff040404, 0xff060606, 0xff070707, 0xff090909, 0xff0b0b0b, 0xff0c0c0c, 0xff0f0f0f, 0xff101010, 0xff7d7d7d, 0xff373737, 0xff808080, 0xff878787, 0xffaeaeae, 0xff565656, 0xffaeaeaf, 0xffaeaeaf, 0xffa0a0a0, 0xffaeaeae, 0xffaeaeaf, 0xff575757, 0xffaeaeaf, 0xff808080, 0xff7f7f7f, 0xff545454, 0xff343434, 0xff0d0d0d, 0xff0c0c0c, 0xff0c0c0c, 0xff0c0c0c, 0xff0c0c0c, 0xff0d0d0d, 0xff0f0f0f, 0xff111111, 0xff131313, 0xff161616, 0xff191919, 0xff1c1c1c, 0xff1e1e1e, 0xff212121, 0xff232323, 0xff262626, 0xff272727, 0xff7c7c7c, 0xff474747, 0xffababac, 0xffababac, 0xff929292, 0xff494949, 0xffababac, 0xffababac, 0xff5f5f5f, 0xffadadae, 0xffaeaeae, 0xff6b6b6b, 0xff828282, 0xffaeaeae, 0xff808080, 0xff545454, 0xff353535, 0xff0d0d0d, 0xff0a0a0a, 0xff080808, 0xff060606, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff030303, 0xff030303, 0xff040404, 0xff040404, 0xff050505, 0xff050505, 0xff060606, 0xff060606, 0xff070707, 0xff080808, 0xff090909, 0xff0b0b0b, 0xff0d0d0d, 0xff101010, 0xff121212, 0xff131313, 0xff161616, 0xff3a3a3a, 0xff3b3b3b, 0xff303030, 0xff242424, 0xff252525, 0xff7e7e7e, 0xff4a4a4a, 0xff585858, 0xff494949, 0xff656565, 0xff6d6d6d, 0xff383838, 0xff373737, 0xff343434, 0xff323232, 0xff0b0b0b, 0xff090909, 0xff060606, 0xff040404, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff030303, 0xff040404, 0xff060606, 0xff070707, 0xff090909, 0xff0b0b0b, 0xff0c0c0c, 0xff0e0e0e, 0xff101010, 0xff7e7e7e, 0xff363636, 0xffafafb0, 0xff808080, 0xff868687, 0xff808081, 0xffaeaeaf, 0xffaeaeaf, 0xffaeaeaf, 0xffaeaeaf, 0xffaeaeaf, 0xff565656, 0xff818181, 0xff818181, 0xffafafaf, 0xff545454, 0xff333333, 0xff0d0d0d, 0xff0c0c0c, 0xff0c0c0c, 0xff0b0b0b, 0xff0c0c0c, 0xff0d0d0d, 0xff0f0f0f, 0xff101010, 0xff131313, 0xff151515, 0xff181818, 0xff1a1a1a, 0xff1d1d1d, 0xff202020, 0xff222222, 0xff242424, 0xff262626, 0xff7e7e7e, 0xff474747, 0xff888888, 0xffacacad, 0xff9d9d9d, 0xff606060, 0xffacacad, 0xffacacac, 0xff5d5d5d, 0xffacacac, 0xffadadae, 0xff585858, 0xffa9a9a9, 0xff828282, 0xff808080, 0xff545454, 0xff333333, 0xff0c0c0c, 0xff090909, 0xff070707, 0xff050505, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff020202, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff040404, 0xff050505, 0xff060606, 0xff080808, 0xff090909, 0xff0c0c0c, 0xff0e0e0e, 0xff101010, 0xff131313, 0xff161616, 0xff363636, 0xff3c3c3c, 0xff393939, 0xff262626, 0xff7e7e7e, 0xff828282, 0xff5a5a5a, 0xff5a5a5a, 0xff545454, 0xff5a5a5a, 0xff454545, 0xff818181, 0xff212121, 0xff2b2b2b, 0xff373737, 0xff343434, 0xff101010, 0xff0a0a0a, 0xff070707, 0xff050505, 0xff030303, 0xff020202, 0xff020202, 0xff020202, 0xff030303, 0xff040404, 0xff050505, 0xff070707, 0xff090909, 0xff0a0a0a, 0xff0c0c0c, 0xff0e0e0e, 0xff0f0f0f, 0xff7d7d7d, 0xff363636, 0xffafafb0, 0xffafafb0, 0xff818181, 0xff565657, 0xffaeaeaf, 0xffaeaeaf, 0xffaeaeaf, 0xffafafb0, 0xffaeaeaf, 0xff555555, 0xff808080, 0xffafafaf, 0xffaeaeaf, 0xff535353, 0xff333333, 0xff0c0c0c, 0xff0b0b0b, 0xff0b0b0b, 0xff0b0b0b, 0xff0c0c0c, 0xff0d0d0d, 0xff0f0f0f, 0xff101010, 0xff131313, 0xff151515, 0xff161616, 0xff191919, 0xff1c1c1c, 0xff1d1d1d, 0xff202020, 0xff232323, 0xff242424, 0xff818181, 0xff454545, 0xff848484, 0xff8b8b8b, 0xffa7a7a8, 0xff5f5f5f, 0xffababac, 0xffacacad, 0xff7e7e7e, 0xffaaaaab, 0xffaeaeae, 0xff575757, 0xff9f9f9f, 0xff808080, 0xffafafb0, 0xff545454, 0xff333333, 0xff0c0c0c, 0xff090909, 0xff070707, 0xff050505, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff020202, 0xff020202, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff060606, 0xff080808, 0xff0a0a0a, 0xff0d0d0d, 0xff101010, 0xff131313, 0xff161616, 0xff1a1a1a, 0xff818181, 0xff3e3e3e, 0xff303030, 0xff787878, 0xff828282, 0xff5c5c5c, 0xff5b5b5b, 0xff5c5c5c, 0xff747474, 0xff404040, 0xff5a5a5a, 0xff5a5a5a, 0xff818181, 0xff232323, 0xff2d2d2d, 0xff363636, 0xff737373, 0xff0c0c0c, 0xff090909, 0xff060606, 0xff040404, 0xff030303, 0xff020202, 0xff020202, 0xff030303, 0xff030303, 0xff050505, 0xff060606, 0xff090909, 0xff0a0a0a, 0xff0c0c0c, 0xff0d0d0d, 0xff0f0f0f, 0xff7e7e7e, 0xff353535, 0xffafafaf, 0xffafafb0, 0xffaeaeae, 0xff565656, 0xff808080, 0xffaeaeaf, 0xffafafb0, 0xffaeaeb0, 0xff8c8c8c, 0xff555555, 0xffaeaeae, 0xffaeaeaf, 0xffaeaeaf, 0xff535353, 0xff333333, 0xff0c0c0c, 0xff0b0b0b, 0xff0b0b0b, 0xff0b0b0b, 0xff0c0c0c, 0xff0c0c0c, 0xff0f0f0f, 0xff101010, 0xff121213, 0xff141414, 0xff161616, 0xff181818, 0xff191919, 0xff1c1c1c, 0xff1e1e1e, 0xff202021, 0xff232323, 0xff818181, 0xff444444, 0xffababac, 0xff848484, 0xff868686, 0xff5e5e5e, 0xffacacad, 0xffadadae, 0xff5b5b5b, 0xffaeaeae, 0xffaeaeae, 0xff575757, 0xff808080, 0xffadadae, 0xffafafaf, 0xff535353, 0xff343434, 0xff0b0b0b, 0xff090909, 0xff060606, 0xff050505, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff020202, 0xff020202, 0xff030303, 0xff030303, 0xff060606, 0xff090909, 0xff0b0b0b, 0xff0e0e0e, 0xff121212, 0xff151515, 0xff202020, 0xff818181, 0xff464646, 0xff292929, 0xff2b2b2c, 0xff838383, 0xff595959, 0xff5d5d5d, 0xff5d5d5d, 0xff434343, 0xffababab, 0xff707070, 0xff404040, 0xff3f3f3f, 0xff818181, 0xff818181, 0xff202020, 0xff393939, 0xff7f7f7f, 0xff222222, 0xff0a0a0a, 0xff070707, 0xff050505, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff050505, 0xff060606, 0xff080808, 0xff090909, 0xff0b0b0b, 0xff0c0c0c, 0xff0e0e0e, 0xff7e7e7e, 0xff353535, 0xffaeaeaf, 0xffafafaf, 0xffaeaeae, 0xff808080, 0xff838383, 0xff808080, 0xffafafb0, 0xff9b9b9c, 0xff808080, 0xff808080, 0xffaeaeaf, 0xffafafb0, 0xffaeaeb0, 0xff535353, 0xff363636, 0xff0c0c0c, 0xff0a0a0a, 0xff0a0a0a, 0xff0b0b0b, 0xff0b0b0b, 0xff0c0c0c, 0xff0e0e0e, 0xff101010, 0xff121212, 0xff141414, 0xff161616, 0xff171717, 0xff191919, 0xff1b1b1b, 0xff1d1d1d, 0xff1f1f1f, 0xff212121, 0xff808080, 0xff434343, 0xffababac, 0xffacacad, 0xff838383, 0xff5d5d5d, 0xffa1a1a1, 0xffaeaeae, 0xff6b6b6b, 0xffaeaeaf, 0xff818181, 0xff575757, 0xff838383, 0xffafafb0, 0xffaeaeaf, 0xff535353, 0xff343434, 0xff0a0a0a, 0xff080808, 0xff060606, 0xff040404, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff060606, 0xff090909, 0xff0c0c0c, 0xff101010, 0xff131313, 0xff3a3a3a, 0xff818181, 0xff747474, 0xff404040, 0xff2b2b2b, 0xff7e7e7e, 0xff838383, 0xff5e5e5e, 0xff5a5a5a, 0xff545454, 0xffacacad, 0xffacacad, 0xffacacad, 0xff6e6e6e, 0xff595959, 0xff828282, 0xff585858, 0xff474747, 0xff212121, 0xff363636, 0xff7b7b7b, 0xff7e7e7e, 0xff080808, 0xff060606, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff030303, 0xff050505, 0xff060606, 0xff080808, 0xff090909, 0xff0b0b0b, 0xff0c0c0c, 0xff0d0d0d, 0xff7e7e7e, 0xff343434, 0xffaeaeae, 0xffaeaeaf, 0xffaeaeae, 0xff565656, 0xffafafb0, 0xff838383, 0xff808080, 0xff808080, 0xffafafaf, 0xff7f7f7f, 0xffaeaeaf, 0xffafafb0, 0xffb0b0b1, 0xff505050, 0xff323232, 0xff0b0b0b, 0xff090909, 0xff0a0a0a, 0xff0a0a0a, 0xff0b0b0b, 0xff0c0c0c, 0xff0d0d0d, 0xff101010, 0xff111111, 0xff131313, 0xff151515, 0xff161616, 0xff181818, 0xff191919, 0xff1c1c1c, 0xff1d1d1d, 0xff202020, 0xff808080, 0xff424242, 0xffababac, 0xffacacad, 0xffababac, 0xff5d5d5d, 0xff838383, 0xffadadae, 0xff818181, 0xff9e9e9e, 0xff818181, 0xff7d7d7d, 0xffafafb0, 0xffafafb0, 0xffafafb0, 0xff525252, 0xff333333, 0xff090909, 0xff070707, 0xff060606, 0xff040404, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff060606, 0xff090909, 0xff0d0d0d, 0xff111111, 0xff151515, 0xff191919, 0xff343434, 0xff6b6b6b, 0xff414141, 0xff2d2d2d, 0xff838383, 0xff575757, 0xff5f5f5f, 0xff525252, 0xff878787, 0xff868686, 0xffacacad, 0xff878787, 0xff898989, 0xffadadae, 0xff838383, 0xff575757, 0xff585858, 0xff212121, 0xff373737, 0xff353535, 0xff323232, 0xff090909, 0xff060606, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff030303, 0xff040404, 0xff060606, 0xff070707, 0xff090909, 0xff0a0a0a, 0xff0c0c0c, 0xff0d0d0d, 0xff7e7e7e, 0xff333333, 0xff7e7e7e, 0xffaeaeae, 0xffaeaeae, 0xff545454, 0xffafafaf, 0xffafafaf, 0xff808080, 0xffa5a5a6, 0xffaeaeaf, 0xff808080, 0xffaeaeaf, 0xffafafb0, 0xff7f7f7f, 0xff3c3c3c, 0xff383838, 0xff0a0a0a, 0xff090909, 0xff090909, 0xff0a0a0a, 0xff0a0a0a, 0xff0c0c0c, 0xff0d0d0d, 0xff0f0f0f, 0xff111111, 0xff131313, 0xff141414, 0xff161616, 0xff171717, 0xff191919, 0xff1b1b1b, 0xff1d1d1d, 0xff1f1f1f, 0xff7f7f7f, 0xff414141, 0xff828282, 0xffacacad, 0xffababac, 0xff5c5c5c, 0xff838383, 0xff8e8e8e, 0xff818181, 0xff818181, 0xffacacad, 0xff575757, 0xffafafb0, 0xffaeaeaf, 0xffafafb0, 0xff515151, 0xff323232, 0xff090909, 0xff070707, 0xff060606, 0xff040404, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff020202, 0xff030303, 0xff070707, 0xff0a0a0a, 0xff0e0e0e, 0xff131313, 0xff161616, 0xff1b1b1b, 0xff1e1e1e, 0xff838383, 0xff434343, 0xff2f2f2f, 0xff848484, 0xff5d5d5d, 0xff5f5f5f, 0xffacacac, 0xffacacac, 0xff848484, 0xffababac, 0xff848484, 0xffacacae, 0xffacacae, 0xffadadad, 0xff5a5a5a, 0xff5a5a5a, 0xff232323, 0xff383838, 0xff353535, 0xff121212, 0xff0a0a0a, 0xff060606, 0xff040404, 0xff030303, 0xff020202, 0xff020202, 0xff030303, 0xff040404, 0xff060606, 0xff060606, 0xff080808, 0xff090909, 0xff0b0b0b, 0xff0c0c0c, 0xff7e7e7e, 0xff333333, 0xff9b9b9c, 0xff7e7e7e, 0xffaaaaab, 0xff545454, 0xffaeaeaf, 0xffaeaeaf, 0xffa9a9aa, 0xffafafb0, 0xffaeaeaf, 0xff7f7f7f, 0xffacacad, 0xff7e7e7e, 0xff8b8b8b, 0xff353535, 0xff353535, 0xff0a0a0a, 0xff090909, 0xff090909, 0xff090909, 0xff0a0a0a, 0xff0b0b0b, 0xff0c0c0c, 0xff0f0f0f, 0xff101010, 0xff121212, 0xff131313, 0xff151515, 0xff161616, 0xff181818, 0xff1a1a1a, 0xff1c1c1c, 0xff1d1d1d, 0xff808080, 0xff404040, 0xff9b9b9b, 0xff828282, 0xffadadae, 0xff5b5b5b, 0xffadadae, 0xff818181, 0xff818181, 0xff818181, 0xffaeaeae, 0xff545454, 0xffaeaeaf, 0xffababac, 0xff7f7f7f, 0xff515151, 0xff323232, 0xff090909, 0xff070707, 0xff060606, 0xff040404, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff040404, 0xff070707, 0xff0b0b0b, 0xff101010, 0xff131313, 0xff181818, 0xff1d1d1d, 0xff202020, 0xff404040, 0xff444444, 0xff303030, 0xff606060, 0xff616161, 0xff474747, 0xffacacad, 0xffacacad, 0xff848484, 0xff525252, 0xff848484, 0xffacacad, 0xffadadae, 0xffadadae, 0xff5b5b5b, 0xff5a5a5a, 0xff242424, 0xff3e3e3e, 0xff333333, 0xff0f0f0f, 0xff0b0b0b, 0xff070707, 0xff040404, 0xff020202, 0xff020202, 0xff020202, 0xff030303, 0xff030303, 0xff050505, 0xff060606, 0xff080808, 0xff090909, 0xff0a0a0a, 0xff0d0d0d, 0xff7e7e7e, 0xff323232, 0xffb0b0b1, 0xffababac, 0xff7f7f7f, 0xff7f7f7f, 0xffafafb0, 0xffafafb0, 0xffafafb0, 0xffaeaeae, 0xffafafb0, 0xff535353, 0xff7e7e7e, 0xff9c9c9c, 0xffafafb0, 0xff616161, 0xff313131, 0xff090909, 0xff090909, 0xff090909, 0xff090909, 0xff090909, 0xff0b0b0b, 0xff0c0c0c, 0xff0d0d0d, 0xff101010, 0xff121212, 0xff131313, 0xff141414, 0xff161616, 0xff171717, 0xff191919, 0xff1a1a1a, 0xff1d1d1d, 0xff808080, 0xff404040, 0xffacacad, 0xff888888, 0xff828282, 0xff5a5a5a, 0xffadadae, 0xff838383, 0xff818181, 0xffaeaeae, 0xffaeaeb0, 0xff575757, 0xff949495, 0xff7f7f7f, 0xffa5a5a5, 0xff505050, 0xff313131, 0xff080808, 0xff060606, 0xff050505, 0xff040404, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff050505, 0xff080808, 0xff0c0c0c, 0xff101010, 0xff151515, 0xff191919, 0xff1d1d1d, 0xff212121, 0xff484848, 0xff838383, 0xff303030, 0xff606060, 0xff575757, 0xff848484, 0xffacacad, 0xffababac, 0xff848484, 0xff474747, 0xff848484, 0xffababac, 0xffacacad, 0xff848484, 0xff575757, 0xff595959, 0xff242424, 0xff3c3c3c, 0xff141414, 0xff101010, 0xff0c0c0c, 0xff080808, 0xff040404, 0xff020202, 0xff020202, 0xff020202, 0xff030303, 0xff030303, 0xff050505, 0xff060606, 0xff070707, 0xff090909, 0xff090909, 0xff121212, 0xff313131, 0xff333333, 0xffb0b0b1, 0xffafafb0, 0xffafafb0, 0xff7f7f7f, 0xffaeaeae, 0xffafafb0, 0xffafafb0, 0xffafafb0, 0xffafafb0, 0xff666666, 0xff818181, 0xffb0b0b1, 0xffafafb1, 0xff6a6a6a, 0xff303030, 0xff282828, 0xff080808, 0xff080808, 0xff080808, 0xff090909, 0xff0a0a0a, 0xff0b0b0b, 0xff0d0d0d, 0xff0f0f0f, 0xff111111, 0xff131313, 0xff131313, 0xff151515, 0xff161616, 0xff181818, 0xff191919, 0xff1c1c1c, 0xff7e7e7e, 0xff3f3f3f, 0xffacacad, 0xffadadae, 0xff838383, 0xff5a5a5a, 0xff828282, 0xffaeaeae, 0xffaeaeae, 0xffafafb0, 0xffafafaf, 0xff545454, 0xff7f7f7f, 0xffafafb0, 0xffb0b0b1, 0xff505050, 0xff313131, 0xff080808, 0xff060606, 0xff050505, 0xff040404, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff050505, 0xff090909, 0xff0c0c0c, 0xff111111, 0xff161616, 0xff1a1a1a, 0xff1e1e1e, 0xff232323, 0xff2f2f2f, 0xff838383, 0xff313131, 0xff616161, 0xff878787, 0xff848484, 0xff9b9b9b, 0xff8f8f90, 0xff585858, 0xff4a4a4a, 0xff484848, 0xff848484, 0xff838383, 0xff878787, 0xff6a6a6a, 0xff5b5b5b, 0xff262626, 0xff3b3b3b, 0xff151515, 0xff111111, 0xff0c0c0c, 0xff090909, 0xff050505, 0xff020202, 0xff020202, 0xff010101, 0xff020202, 0xff030303, 0xff040404, 0xff050506, 0xff060606, 0xff080808, 0xff090909, 0xff5d5d5d, 0xff303030, 0xff323232, 0xffadadae, 0xffafafb0, 0xffafafb0, 0xff7f7f7f, 0xff7f7f7f, 0xffafafb0, 0xffafafb0, 0xffb0b0b1, 0xff7e7e7e, 0xff7e7e7f, 0xffb0b0b1, 0xffb0b0b1, 0xffb1b1b1, 0xff565657, 0xff303030, 0xff2f2f2f, 0xff090909, 0xff070707, 0xff080808, 0xff090909, 0xff090909, 0xff0b0b0b, 0xff0c0c0c, 0xff0e0e0e, 0xff101010, 0xff111112, 0xff131313, 0xff141414, 0xff161616, 0xff171717, 0xff191919, 0xff1b1b1b, 0xff7e7e7e, 0xff3e3e3e, 0xffadadae, 0xffadadae, 0xffadadae, 0xff595959, 0xff818181, 0xff848484, 0xffaeaeaf, 0xffaeaeaf, 0xff808080, 0xff545454, 0xffaeaeaf, 0xffafafb0, 0xffacacad, 0xff505050, 0xff2f2f2f, 0xff070707, 0xff060606, 0xff050505, 0xff040404, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff050505, 0xff090909, 0xff0c0c0c, 0xff111111, 0xff161616, 0xff1b1b1b, 0xff1f1f1f, 0xff232323, 0xff262626, 0xff848484, 0xff343435, 0xff616161, 0xff848484, 0xffaaaaab, 0xff848484, 0xff666666, 0xff474747, 0xff474747, 0xff464646, 0xff737373, 0xffababac, 0xffacacad, 0xff646464, 0xff3f3f3f, 0xff3d3d3d, 0xff3b3b3b, 0xff161616, 0xff121212, 0xff0d0d0d, 0xff090909, 0xff050505, 0xff020202, 0xff020202, 0xff010101, 0xff020202, 0xff030303, 0xff030303, 0xff050505, 0xff060606, 0xff070707, 0xff191919, 0xff7e7e7e, 0xff303030, 0xff303031, 0xffb0b0b2, 0xffafafb0, 0xffb0b0b1, 0xff7f7f7f, 0xff8f8f90, 0xff7f7f7f, 0xffb0b0b1, 0xff7e7e7e, 0xff878787, 0xff7e7e7e, 0xffb0b0b1, 0xffb0b0b1, 0xffb1b1b1, 0xff515151, 0xff424242, 0xff2e2e2e, 0xff2e2e2e, 0xff070707, 0xff070707, 0xff080808, 0xff090909, 0xff0a0a0a, 0xff0c0c0c, 0xff0d0d0d, 0xff0f0f0f, 0xff101010, 0xff121212, 0xff131313, 0xff151515, 0xff161616, 0xff181818, 0xff191919, 0xff7f7f7f, 0xff3d3d3d, 0xffadadae, 0xffadadae, 0xffacacad, 0xff595959, 0xffaeaeae, 0xff818181, 0xffa5a5a5, 0xff808080, 0xff7f7f7f, 0xff7f7f7f, 0xffb0b0b1, 0xffb0b0b1, 0xffb1b1b1, 0xff505050, 0xff2e2e2e, 0xff070707, 0xff060606, 0xff050505, 0xff030303, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff060606, 0xff090909, 0xff0c0c0c, 0xff111111, 0xff161616, 0xff1b1b1b, 0xff202020, 0xff232323, 0xff262626, 0xff848484, 0xff484848, 0xff545454, 0xff505050, 0xffababac, 0xffababac, 0xff777777, 0xff484848, 0xff484848, 0xff474747, 0xff808080, 0xffacacad, 0xffacacad, 0xff828282, 0xff5b5b5b, 0xff5a5a5a, 0xff3d3d3d, 0xff171717, 0xff131313, 0xff0e0e0e, 0xff090909, 0xff050505, 0xff020202, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff030303, 0xff040404, 0xff060606, 0xff060606, 0xff303030, 0xff2f2f2f, 0xff373737, 0xff303030, 0xffa5a5a7, 0xffb0b0b1, 0xffb0b0b1, 0xff7e7e7e, 0xffb0b0b1, 0xff7f7f7f, 0xff7f7f7f, 0xff7e7e7e, 0xffb0b0b1, 0xff7f7f7f, 0xffb1b1b1, 0xffb0b0b0, 0xffb0b0b1, 0xff505050, 0xff3f3f3f, 0xff2f2f2f, 0xff2d2d2d, 0xff131313, 0xff070707, 0xff070708, 0xff080808, 0xff090909, 0xff0b0b0b, 0xff0c0c0c, 0xff0e0e0e, 0xff101010, 0xff111111, 0xff121212, 0xff131313, 0xff161616, 0xff181818, 0xff191919, 0xff808080, 0xff3d3d3d, 0xff8f8f8f, 0xffaeaeae, 0xffaeaeae, 0xff595959, 0xffaeaeae, 0xffaaaaab, 0xff868687, 0xff7f7f7f, 0xffafafb0, 0xff535353, 0xffb0b0b1, 0xffb0b0b1, 0xff9a9a9a, 0xff505050, 0xff2e2e2e, 0xff070707, 0xff060606, 0xff050505, 0xff030303, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff060606, 0xff090909, 0xff0c0c0c, 0xff111111, 0xff161616, 0xff1b1b1b, 0xff202020, 0xff232323, 0xff262626, 0xff848484, 0xff484848, 0xff484848, 0xff484848, 0xffababab, 0xffababab, 0xff505050, 0xff757575, 0xff5a5a5a, 0xff676767, 0xff494949, 0xff848484, 0xff848484, 0xff838383, 0xff474747, 0xff5a5a5a, 0xff3d3d3d, 0xff171717, 0xff131313, 0xff0f0f0f, 0xff090909, 0xff050505, 0xff020202, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff030303, 0xff050505, 0xff060606, 0xff7b7b7b, 0xff303030, 0xff2f2f2f, 0xff7d7d7d, 0xff1a1a1a, 0xffb0b0b0, 0xffb1b1b1, 0xff7e7e7e, 0xffb0b0b1, 0xffb0b0b1, 0xff818182, 0xffb0b0b1, 0xffb0b0b1, 0xff7e7e7e, 0xffb1b1b1, 0xffb0b0b1, 0xff616161, 0xff1d1d1d, 0xff7d7d7d, 0xff131313, 0xff2d2d2d, 0xff7c7c7c, 0xff060606, 0xff060606, 0xff070707, 0xff090909, 0xff090909, 0xff0b0b0b, 0xff0c0c0c, 0xff0f0f0f, 0xff101010, 0xff111111, 0xff131313, 0xff151515, 0xff171717, 0xff181818, 0xff7f7f7f, 0xff3c3c3c, 0xff818181, 0xff888888, 0xffadadae, 0xff585858, 0xffaeaeae, 0xffaeaeaf, 0xff9f9fa0, 0xffaeaeaf, 0xffafafb0, 0xff535353, 0xffafafb0, 0xff7e7e7e, 0xff7e7e7e, 0xff505050, 0xff2f2f2f, 0xff060606, 0xff060606, 0xff040404, 0xff030303, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff050505, 0xff080808, 0xff0c0c0c, 0xff111111, 0xff161616, 0xff1b1b1b, 0xff202020, 0xff232323, 0xff262626, 0xff848484, 0xff484848, 0xff717171, 0xff4a4a4a, 0xff848484, 0xff848484, 0xff858585, 0xff848484, 0xff4a4a4a, 0xff848484, 0xff848484, 0xffababac, 0xff454545, 0xff434343, 0xff555555, 0xff5b5b5b, 0xff3d3d3d, 0xff181819, 0xff131313, 0xff0f0f0f, 0xff090909, 0xff050505, 0xff020202, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff030303, 0xff040404, 0xff050505, 0xff7e7e7e, 0xff7d7d7d, 0xff7d7d7d, 0xff2d2d2d, 0xff2b2b2b, 0xff303030, 0xffb0b0b0, 0xff7e7e7e, 0xffb0b0b0, 0xffb0b0b0, 0xffb0b0b0, 0xffb0b0b0, 0xffb1b1b1, 0xff818181, 0xffb0b0b0, 0xffb0b0b1, 0xff2f2f2f, 0xff2d2d2d, 0xff191919, 0xff7d7d7d, 0xff464646, 0xff070707, 0xff060606, 0xff060606, 0xff070707, 0xff080808, 0xff090909, 0xff0a0a0a, 0xff0c0c0c, 0xff0d0d0d, 0xff0f0f0f, 0xff101010, 0xff121212, 0xff131313, 0xff161616, 0xff181818, 0xff7f7f7f, 0xff3b3b3b, 0xffaeaeae, 0xff818181, 0xff878787, 0xff818181, 0xffaeaeaf, 0xffaeaeaf, 0xffaeaeaf, 0xffaeaeaf, 0xffafafb0, 0xff525252, 0xff7f7f7f, 0xff7f7f80, 0xffb0b0b0, 0xff505050, 0xff2e2e2e, 0xff060606, 0xff060606, 0xff040404, 0xff030303, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff050505, 0xff080808, 0xff0c0c0c, 0xff101010, 0xff161616, 0xff1a1a1a, 0xff1f1f1f, 0xff232323, 0xff262626, 0xff848484, 0xff484848, 0xffababab, 0xff494949, 0xff848484, 0xffababab, 0xffababab, 0xff4a4a4a, 0xff4a4a4a, 0xff4a4a4a, 0xffa5a5a5, 0xffababac, 0xff474747, 0xff464646, 0xffacacad, 0xff5c5c5c, 0xff3d3d3d, 0xff191919, 0xff131313, 0xff0f0f0f, 0xff090909, 0xff050505, 0xff020202, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff030303, 0xff040404, 0xff060606, 0xff555555, 0xff6e6e6e, 0xff2f2f2f, 0xff2f2f2f, 0xff7d7d7d, 0xff696969, 0xff808080, 0xffb0b0b1, 0xffb0b0b0, 0xffb0b0b0, 0xffb0b0b1, 0xffb0b0b1, 0xff7e7e7e, 0xffb0b0b1, 0xff2f2f2f, 0xff7d7d7d, 0xff2e2e2e, 0xff2e2e2e, 0xff7d7d7d, 0xff050505, 0xff050505, 0xff050505, 0xff060606, 0xff060606, 0xff060606, 0xff080808, 0xff090909, 0xff0b0b0b, 0xff0c0c0c, 0xff0d0d0d, 0xff0f0f0f, 0xff101010, 0xff131313, 0xff151515, 0xff161616, 0xff7f7f7f, 0xff3b3b3b, 0xffaeaeae, 0xffaeaeaf, 0xff818181, 0xff585858, 0xffaeaeaf, 0xffaeaeaf, 0xffaeaeaf, 0xffafafb0, 0xffafafb0, 0xff525252, 0xff7e7e7e, 0xffb0b0b0, 0xffb0b0b1, 0xff505050, 0xff2e2e2e, 0xff060606, 0xff050505, 0xff040404, 0xff030303, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff050505, 0xff070707, 0xff0b0b0b, 0xff101010, 0xff151515, 0xff191919, 0xff1e1e1e, 0xff232323, 0xff262626, 0xff828282, 0xff474747, 0xffababac, 0xff4a4a4a, 0xff4a4a4a, 0xffa9a9aa, 0xffababab, 0xff4a4a4a, 0xff4b4b4b, 0xff5a5a5a, 0xffababab, 0xffaaaaaa, 0xff484848, 0xff7e7e7e, 0xffababac, 0xff5c5c5c, 0xff3e3e3e, 0xff191919, 0xff131313, 0xff0e0e0e, 0xff090909, 0xff050505, 0xff020202, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff020202, 0xff030303, 0xff030303, 0xff050505, 0xff060606, 0xff060606, 0xff737373, 0xff7d7d7d, 0xff131313, 0xff2f2f2f, 0xff7d7d7d, 0xffb0b0b1, 0xffb0b0b1, 0xffb0b0b1, 0xffb0b0b1, 0xffb0b0b1, 0xff4d4d4d, 0xff161616, 0xff131313, 0xff121212, 0xff7c7c7c, 0xff7b7b7b, 0xff131314, 0xff050505, 0xff050505, 0xff050505, 0xff050505, 0xff050505, 0xff060606, 0xff060606, 0xff080808, 0xff090909, 0xff0b0b0b, 0xff0c0c0c, 0xff0d0d0d, 0xff101010, 0xff121212, 0xff141414, 0xff161616, 0xff7f7f7f, 0xff3a3a3a, 0xffaeaeae, 0xffaeaeae, 0xffadadae, 0xff575757, 0xff818181, 0xffafafb0, 0xffaeaeaf, 0xffafafb0, 0xff8b8b8b, 0xff525252, 0xffaeaeaf, 0xffb1b1b1, 0xffafafb0, 0xff4f4f4f, 0xff2e2e2e, 0xff060606, 0xff050505, 0xff040404, 0xff030303, 0xff020202, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff020202, 0xff040404, 0xff070707, 0xff0a0a0a, 0xff0f0f0f, 0xff141414, 0xff191919, 0xff1d1d1d, 0xff212121, 0xff252525, 0xff7e7e7e, 0xff474747, 0xffababac, 0xffa7a7a8, 0xff4a4a4a, 0xff8c8c8d, 0xffababac, 0xff848484, 0xff4d4d4d, 0xff818181, 0xffababab, 0xff9b9b9b, 0xff4a4a4a, 0xffababac, 0xffababac, 0xff5d5d5d, 0xff3f3f3f, 0xff191919, 0xff131313, 0xff0e0e0e, 0xff090909, 0xff050505, 0xff020202, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff030303, 0xff040404, 0xff050505, 0xff060606, 0xff7e7e7e, 0xff121212, 0xff2d2d2d, 0xff2f2f2f, 0xff1d1d1d, 0xffb0b0b2, 0xffb1b1b2, 0xffb1b1b2, 0xffb1b1b2, 0xff979797, 0xff131313, 0xff161616, 0xff111111, 0xff2d2d2d, 0xff1e1e1e, 0xff060606, 0xff050505, 0xff040404, 0xff040404, 0xff030303, 0xff040404, 0xff040404, 0xff050505, 0xff060606, 0xff070707, 0xff080808, 0xff090909, 0xff0b0b0b, 0xff0c0c0c, 0xff0f0f0f, 0xff111111, 0xff131313, 0xff141414, 0xff808080, 0xff3a3a3a, 0xffaeaeaf, 0xffaeaeaf, 0xffadadae, 0xff808080, 0xff838383, 0xff808080, 0xffaeaeaf, 0xff9b9b9c, 0xff7f7f7f, 0xff7e7e7e, 0xffb0b0b0, 0xffb0b0b1, 0xffb0b0b2, 0xff4f4f4f, 0xff323232, 0xff060606, 0xff040404, 0xff030303, 0xff030303, 0xff020202, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff020202, 0xff040404, 0xff060606, 0xff090909, 0xff0e0e0e, 0xff131313, 0xff171717, 0xff1c1c1c, 0xff202020, 0xff242424, 0xff7b7b7b, 0xff474747, 0xffababac, 0xffababac, 0xff4a4a4a, 0xff868686, 0xffababab, 0xffa7a7a8, 0xff646464, 0xff999999, 0xffababab, 0xff7a7a7a, 0xff4a4a4a, 0xffababab, 0xffababac, 0xff5e5e5e, 0xff404040, 0xff181818, 0xff131313, 0xff0d0d0d, 0xff090909, 0xff050505, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff030303, 0xff040404, 0xff050505, 0xff0a0a0a, 0xff707070, 0xff2d2d2d, 0xff2d2d2d, 0xff121212, 0xff151516, 0xff3f3f3f, 0xff9c9c9e, 0xffacacad, 0xff303030, 0xff212121, 0xff111111, 0xff2c2c2c, 0xff2f2f2f, 0xff767676, 0xff050505, 0xff040404, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff050505, 0xff060606, 0xff070707, 0xff090909, 0xff090909, 0xff0b0b0b, 0xff0d0d0d, 0xff101010, 0xff121212, 0xff131313, 0xff808080, 0xff393939, 0xffaeaeae, 0xffaeaeaf, 0xffacacad, 0xff575757, 0xffaeaeaf, 0xff838383, 0xff7f7f7f, 0xff7f7f7f, 0xffb0b0b1, 0xff7e7e7e, 0xffb1b1b1, 0xffafafb0, 0xffb0b0b1, 0xff4d4d4d, 0xff2d2d2d, 0xff050505, 0xff040404, 0xff030303, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff060606, 0xff090909, 0xff0c0c0c, 0xff111111, 0xff161616, 0xff1a1a1a, 0xff1f1f1f, 0xff232323, 0xff7b7b7b, 0xff474747, 0xffacacad, 0xffababac, 0xff919192, 0xff4a4a4a, 0xffababab, 0xffababab, 0xff646464, 0xffababab, 0xffaaaaab, 0xff747474, 0xff878787, 0xffababab, 0xff848484, 0xff5f5f5f, 0xff404040, 0xff181818, 0xff121212, 0xff0d0d0d, 0xff080808, 0xff050505, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff020202, 0xff030303, 0xff030303, 0xff040404, 0xff040404, 0xff7d7d7d, 0xff2d2d2d, 0xff2d2d2d, 0xff2d2d2d, 0xff131313, 0xff111111, 0xff121212, 0xff111111, 0xff111111, 0xff111111, 0xff2c2c2c, 0xff7d7d7d, 0xff7d7d7d, 0xff090909, 0xff040404, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff040404, 0xff050505, 0xff060606, 0xff070707, 0xff090909, 0xff090909, 0xff0c0c0c, 0xff0e0e0e, 0xff101010, 0xff121212, 0xff7f7f7f, 0xff373737, 0xff808081, 0xffadadae, 0xffadadae, 0xff565656, 0xffafafb0, 0xffafafb0, 0xff7e7e7e, 0xffa5a5a6, 0xffb0b0b1, 0xff7e7e7e, 0xffb0b0b1, 0xffb0b0b1, 0xff7e7e7e, 0xff393939, 0xff343434, 0xff050505, 0xff040404, 0xff030303, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff050505, 0xff080808, 0xff0c0c0c, 0xff101010, 0xff141414, 0xff191919, 0xff1d1d1d, 0xff212121, 0xff7e7e7e, 0xff454545, 0xff878787, 0xffacacad, 0xff9c9c9d, 0xff626262, 0xffababab, 0xffababab, 0xff656565, 0xffababab, 0xffababab, 0xff646464, 0xffa7a7a8, 0xff878787, 0xff858585, 0xff5f5f5f, 0xff404040, 0xff171717, 0xff111111, 0xff0c0c0c, 0xff080808, 0xff050505, 0xff030303, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff020202, 0xff030303, 0xff030303, 0xff030303, 0xff040404, 0xff252525, 0xff4a4a4a, 0xff6e6e6e, 0xff7b7b7b, 0xff404040, 0xff101010, 0xff101010, 0xff101010, 0xff2d2d2d, 0xff646464, 0xff050505, 0xff040404, 0xff040404, 0xff030303, 0xff030303, 0xff030303, 0xff020202, 0xff010101, 0xff020202, 0xff020202, 0xff030303, 0xff030303, 0xff040404, 0xff050505, 0xff060606, 0xff070707, 0xff080808, 0xff0b0b0b, 0xff0c0c0c, 0xff0f0f0f, 0xff111111, 0xff7f7f7f, 0xff373737, 0xff9b9b9b, 0xff818181, 0xffababab, 0xff545454, 0xffafafb0, 0xffb0b0b1, 0xffababab, 0xffb1b1b1, 0xffb0b0b0, 0xff7f7f7f, 0xffaeaeae, 0xff7e7e7e, 0xff8a8a8a, 0xff313131, 0xff313131, 0xff040404, 0xff030303, 0xff030303, 0xff020202, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff020202, 0xff040404, 0xff060606, 0xff0a0a0a, 0xff0e0e0e, 0xff131313, 0xff161616, 0xff1b1b1b, 0xff1f1f1f, 0xff808080, 0xff434343, 0xff848484, 0xff8b8b8b, 0xffa6a6a7, 0xff646464, 0xffababab, 0xffaaaaab, 0xff828282, 0xffa7a7a8, 0xffaaaaab, 0xff646464, 0xff9e9e9f, 0xff858585, 0xffababac, 0xff5f5f5f, 0xff404040, 0xff161616, 0xff101010, 0xff0b0b0b, 0xff080808, 0xff050505, 0xff030303, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff020202, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff040404, 0xff252525, 0xff7e7e7e, 0xff7e7e7e, 0xff101010, 0xff101010, 0xff101010, 0xff7c7c7c, 0xff040404, 0xff040404, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff020202, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff030303, 0xff040404, 0xff050505, 0xff060606, 0xff070707, 0xff090909, 0xff0b0b0b, 0xff0d0d0d, 0xff101010, 0xff7f7f7f, 0xff353535, 0xffafafaf, 0xffaaaaab, 0xff808080, 0xff7f7f7f, 0xffafafb0, 0xffb0b0b1, 0xffb0b0b1, 0xffafafb0, 0xffb0b0b1, 0xff505050, 0xff7d7d7d, 0xff9d9d9d, 0xffb0b0b1, 0xff5e5e5e, 0xff2c2c2c, 0xff040404, 0xff030303, 0xff030303, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff030303, 0xff060606, 0xff090909, 0xff0c0c0c, 0xff101010, 0xff151515, 0xff191919, 0xff1d1d1d, 0xff808080, 0xff434343, 0xffacacad, 0xff848484, 0xff878787, 0xff636363, 0xffababab, 0xffaaaaab, 0xff646464, 0xffaaaaab, 0xffaaaaab, 0xff646464, 0xff868686, 0xffaaaaaa, 0xffababab, 0xff5f5f5f, 0xff404040, 0xff161616, 0xff101010, 0xff0a0a0a, 0xff070707, 0xff040404, 0xff030303, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff010101, 0xff020202, 0xff020202, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff545454, 0xff7d7d7d, 0xff101010, 0xff2b2b2b, 0xff101010, 0xff060606, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff030303, 0xff030303, 0xff050505, 0xff060606, 0xff070707, 0xff090909, 0xff0b0b0b, 0xff131313, 0xff333333, 0xff343434, 0xffafafb0, 0xffaeaeb0, 0xffafafb0, 0xff7f7f7f, 0xffaeaeaf, 0xffafafb0, 0xffb1b1b1, 0xffafafb1, 0xffb0b0b1, 0xff646464, 0xff808080, 0xffb1b1b2, 0xffb0b0b2, 0xff686869, 0xff2c2c2c, 0xff232323, 0xff030303, 0xff020202, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff020202, 0xff050505, 0xff080808, 0xff0b0b0b, 0xff0f0f0f, 0xff131313, 0xff161616, 0xff1b1b1b, 0xff7f7f7f, 0xff414142, 0xffadadae, 0xffacacac, 0xff848484, 0xff626262, 0xffa1a1a1, 0xffaaaaab, 0xff747474, 0xffaaaaab, 0xff878787, 0xff646464, 0xff888888, 0xffababab, 0xffababab, 0xff5f5f5f, 0xff404040, 0xff151516, 0xff0e0e0e, 0xff0a0a0a, 0xff070707, 0xff040404, 0xff030303, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff010101, 0xff020202, 0xff020202, 0xff020202, 0xff030303, 0xff030303, 0xff030303, 0xff7b7b7b, 0xff3e3e3e, 0xff292929, 0xff030303, 0xff030303, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff020202, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff020202, 0xff020202, 0xff030303, 0xff030303, 0xff040404, 0xff060606, 0xff080808, 0xff090909, 0xff5c5c5c, 0xff313131, 0xff333333, 0xffadadae, 0xffb0b0b1, 0xffb0b0b1, 0xff7e7e7e, 0xff7e7e7e, 0xffb1b1b1, 0xffafafb0, 0xffb0b0b1, 0xff7e7e7e, 0xff7e7e7e, 0xffb1b1b2, 0xffb1b1b2, 0xffb1b1b2, 0xff545454, 0xff2d2d2d, 0xff2b2b2b, 0xff030303, 0xff020202, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff020202, 0xff030303, 0xff060606, 0xff090909, 0xff0d0d0d, 0xff111111, 0xff151515, 0xff191919, 0xff7f7f7f, 0xff404040, 0xffababac, 0xffacacad, 0xffababab, 0xff626262, 0xff868686, 0xffababab, 0xff868686, 0xff9e9e9e, 0xff868686, 0xff828282, 0xffababab, 0xffababab, 0xffababac, 0xff5f5f5f, 0xff404040, 0xff151515, 0xff0d0d0d, 0xff090909, 0xff060606, 0xff040404, 0xff030303, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff010101, 0xff010101, 0xff020202, 0xff020202, 0xff020202, 0xff020202, 0xff020202, 0xff030303, 0xff030303, 0xff020202, 0xff020202, 0xff020202, 0xff020202, 0xff020202, 0xff010101, 0xff010101, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff010101, 0xff010101, 0xff010101, 0xff020202, 0xff030303, 0xff030303, 0xff040404, 0xff060606, 0xff181818, 0xff7e7e7e, 0xff303030, 0xff303030, 0xffafafb0, 0xffb0b0b0, 0xffb1b1b1, 0xff7f7f7f, 0xff8f8f90, 0xff7e7e7e, 0xffb0b0b1, 0xff7e7e7e, 0xff868686, 0xff7e7e7e, 0xffb1b1b2, 0xffb1b1b2, 0xffb2b2b2, 0xff4e4e4e, 0xff3d3d3d, 0xff2a2a2a, 0xff2a2a2a, 0xff020202, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4, 0x00d4d4d4

# allocate room for an array of words that will store the pixle values that need to be redrawn
backgroundToRedraw: .space 32768  # we need room for 512 pixels to refresh entire row of screen

.macro registerValue(%register)
    li $v0, 4        # Load the print string syscall code into $v0
    la $a0, debugOne      # Load the address of the message string into $a0
    syscall          # Print the message "Value in register: "

    li $v0, 1        # Load the print integer syscall code into $v0
    move $a0, %register  # Move the value of the specified register into $a0
    syscall          # Print the value of the specified register

    li $v0, 4        # Load the print string syscall code into $v0
    la $a0, newline  # Load the address of the newline string into $a0
    syscall          # Print a newline character
.end_macro

.macro print_str (%str)
    .data
    myLabel: .asciiz %str
    .text
    li $v0, 4
    la $a0, myLabel
    syscall
.end_macro

.text

.globl main
main:
    # the bits after 0x for colours in the matrix will represent the 
    li $t0, BASE_ADDRESS # $t0 stores the base address for display

    # Draw the background of the game (we will draw in objects afterwards)
    jal DrawBackground
    
    #li $v0, 32
    #li $a0, 5000
    #syscall
    # MIPS doesn't register colour properly the first time need to redraw ALL pixels one more time
    jal redrawEntireBackground
    
    
    # $s6 and $v1 will never be touched by other functions
    li $v1, 0
    li $s6, 2000
    # game loop where we will call functions that update frames of objects and users position
GameLoop:
    # Draw the saws
    jal DrawSaws
    jal RedrawBackground
    
    # draw the character
    la $t4, currentPlayerLocation
    lw $t4, 0($t4)
    add $t4, $t0, $t4
    
    la $t3, currentCharacterDirection
    lw $t3, 0($t3)
    bltz $t3, MirroredChar
    
    # character is facing right
    jal DrawCharacter
    j DrawCharEnd
MirroredChar:
    # character is facing left
    jal DrawMirroredCharacter
    
DrawCharEnd:
    
    lw $t1, KEYBOARD_ADDRESS
    bne $t1, 1, SkipInput
    jal HandleKeyInput
SkipInput:
    
    bgt $v1, $s6, END
    addi $v1, $v1, 1
    
FrameSleep:
    li $v0, 32
    li $a0, MS_PER_FRAME
    syscall

# after our sleep we enter back into the game loop
FrameSleepEnd:
    j GameLoop

END:
   li $v0, 10 # terminate the program gracefully
   syscall    
    
# Draw the background will loop array (this is starting load so its okay future edits will be by pixel to speed things up)
DrawBackground:
    # load the address of the background colors array into $t3
    la $t1, background
    
    # store our index in $t1 and end in $t2
    li $t2, 0
    li $t3, backgroundLength
    
# loop through the array and copy over to our frame buffer
DRAWBACKGROUNDLOOP:
    bge $t2, $t3, DRAWBACKGROUNDEND
    
    # copy over background[i] to frame buffer
    # $t4 will contain the osset needed to read the array
    sll $t4, $t2, 2 # $t4 = $t4 * 4 = i * 4 = offset
    
    # calculate the actual addresses we'll read using start + offset store into $t5 and $t6
    add $t5, $t1, $t4
    add $t6, $t0, $t4
    
    # load the value of background[i] and store into framebuffer
    lw $t7, 0($t5)
    
    # multiply by 4 as its 4 per pixel
    li $t4, 4
    mult $t7, $t4
    
    mflo $t7
    sw $t7, 0($t6)
    
    # increment the index
    addi $t2, $t2, 1
    j DRAWBACKGROUNDLOOP
DRAWBACKGROUNDEND:
    jr $ra

# Draw shifting saws by reading the saw array
DrawSaws:
    # $s1 will store the address of the sawStart
    la $s1, sawStarting
    
    # $s2 will store the address of the sawEnd
    la $s2, sawEnding
    
    # $s3 will store the address of the sawStates
    la $s3, sawStates
    
    # $s4 will store the address of the current locations of the saws
    la $s4, sawLocations
    
    # $s5 will store the number of saws
    la $s5, sawCount
    lw $s5, 0($s5)
    
    # $t1 will be our indexing variable
    li $t1, 0
    
    # $s7 will store the address of the sawDirection
    la $s7, sawDirections
    
# loop through all the saws and apply animation/movement to them
DRAWSAWSLOOP:
    # $a1 will store the address of the backgroundToRedraw
    la $a1, backgroundToRedraw
    
    # $a2 will store the address of the redrawQueueLength
    la $a2, redrawQueueLength
    lw $a2, 0($a2)
    
    # put the offsetted address into $a1
    li $a3, 4
    mult $a2, $a3
    mflo $a3
    add $a1, $a1, $a3
    
    # $a2 will store the address of the redrawQueueLength
    la $a2, redrawQueueLength
    
    # break when the index is the greater than or equal to number of saws
    bge $t1, $s5, DRAWSAWSEND
    
    # calculate the offset store in $t2
    sll $t2, $t1, 2
    
    # get the addresses of each of the arrays at index then store its value
    add $t3, $s1, $t2 # sawStart
    lw $t3, 0($t3)
    
    add $t4, $s2, $t2 # sawEnd
    lw $t4, 0($t4)
    
    add $t5, $s3, $t2 # sawStates
    # store state in $t5
    lw $t5, 0($t5)
    
    add $t6, $s7, $t2 # sawDirection
    lw $t6, 0($t6)

    add $t7, $s4, $t2  # saw current location
    # store location in $t7
    lw $t7, 0($t7)
    
    # calculate where the center of the saw will be in the next frame store into $t8 doesn't move if 0 direction
    move $t8, $t7
    li $t9, -1
    beq $t9, $t6, MOVESLEFT
    li $t9, 1
    beq $t9, $t6, MOVESRIGHT
    li $t9, -2
    beq $t9, $t6, MOVESDOWN
    li $t9, 2
    beq $t9, $t6, MOVESUP
    
    
    
MOVECALCEND:
    # based on location in $t7 draw the saw based on it's current frame then increment frame num
    # check the CURRENT location if we're at either the start or end then we will multiply direction negative (so it moves other way next cycle)
    beq $t3, $t8, CHANGEDIR
    beq $t4, $t8, CHANGEDIR
    j DRAWFRAME
 
CHANGEDIR:       
    # change the direction
    li $a3, -1
    mult $t6, $a3
    mflo $a3
    
    # store this into the direction array
    add $t6, $s7, $t2 # sawDirection
    sw $a3, 0($t6)
    

DRAWFRAME:
    # now draw the saw
    # move $t8 to $t4 for the register based functions
    move $t4, $t8
    # add the base address
    add $t4, $t4, $t0
    li $a3, 0
    # store $t1, $t2, $t3, $t4 onto the stack
    addi $sp, $sp, -4
    sw $t1, 0($sp)
    addi $sp, $sp, -4
    sw $t2, 0($sp)
    addi $sp, $sp, -4
    sw $t3, 0($sp)
    addi $sp, $sp, -4
    sw $t4, 0($sp)    
    
    beq $a3, $t5, DrawSawFrameOne
    li $a3, 1
    beq $a3, $t5, DrawSawFrameTwo
    li $a3, 2
    beq $a3, $t5, DrawSawFrameThree
    
DRAWFRAMEOVER:
    # pop $t1, $t2, $t3, $t4 off the stack
    lw $t4, 0($sp)
    addi $sp, $sp, 4
    lw $t3, 0($sp)
    addi $sp, $sp, 4
    lw $t2, 0($sp)
    addi $sp, $sp, 4
    lw $t1, 0($sp)
    addi $sp, $sp, 4
    
    # now increment the frame counter so its the next frame next cycle
    addi $a3, $t5, 1
    li $t3, 3
    bne $a3, $t3, WRITETOSTATES
    
    # since we ended up with frame count at 3 we need to set to 0 to restart loop
    li $a3, 0
    
WRITETOSTATES:
    # write $a3 (next frame) into the states array
    add $t5, $s3, $t2 # sawStates
    sw $a3, 0($t5)
    
    # update current location field of the array
    add $t7, $s4, $t2  # saw current location
    sub $t4, $t4, $t0 
    sw $t4, 0($t7)

    # increment the index variable
    addi $t1, $t1, 1
    j DRAWSAWSLOOP

DRAWSAWSEND:
    jr $ra
   
MOVESLEFT:
    # to move left, subtract 4 from location
    subi $t8, $t8, UNIT_PER_PIX
   
    # add the pixels that will be overdrawn into the backgroundToRedraw
    # the rightwards pixels will be overdrawn
    #      x
    #        x <- 3
    #  $t7   x <- 1 
    #        x <- 2
    #      x
    addi $t9, $t7, 1036
    sw $t9, 0($a1)
    addi $t9, $t9, 512
    sw $t9, 4($a1)
    addi $t9, $t9, -1024
    sw $t9, 8($a1)
   
    #      x <- 1
    #        x  <- starting here
    #  $t7   x
    #        x
    #      x <- 2
    addi $t9, $t9, -516 # -4 to go left then -512  = -516 to go up
    sw $t9, 12($a1)
    addi $t9, $t9, 2048  # 4*512 = 2048 to do down 4 pixels
    sw $t9, 16($a1)
    
    # update the redrawQueueLength with number of pixels we changed
    lw $a2, 0($a2)
    addi $t9, $a2, 5
    la $a2, redrawQueueLength
    sw $t9, 0($a2)
   
    j MOVECALCEND

MOVESRIGHT:
    addi $t8, $t8, UNIT_PER_PIX
    # add the pixels that will be overdrawn into the backgroundToRedraw
    # the rightwards pixels will be overdrawn
    #          x
    #  -> 3  x 
    #  -> 1  x  $t7
    #  -> 2  x 
    #          x
    addi $t9, $t7, 1020
    sw $t9, 0($a1)
    addi $t9, $t9, 512
    sw $t9, 4($a1)
    addi $t9, $t9, -1024
    sw $t9, 8($a1)
   
    #                 1 -> x
    #  -> starting here  x 
    #  -> 1              x  $t7
    #  -> 2              x 
    #                 2 -> x
    addi $t9, $t9, -508  # 4 to go right then -512 = -508 to go up
    sw $t9, 12($a1)
    addi $t9, $t9, 2048  # 4*512 = 2048 to do down 4 pixels
    sw $t9, 16($a1)
    
    # update the redrawQueueLength with number of pixels we changed
    lw $a2, 0($a2)
    addi $t9, $a2, 5
    la $a2, redrawQueueLength
    sw $t9, 0($a2)
   
    j MOVECALCEND
   
MOVESUP:
    subi $t8, $t8, WIDTH_BY_4
   
    #         x       x
    #           x x x
    addi $t9, $t7, 2052
    sw $t9, 0($a1)
    addi $t9, $t9, 4
    sw $t9, 4($a1)
    addi $t9, $t9, -8
    sw $t9, 8($a1)
   
    addi $t9, $t9, -516 # up then left -512 - 4
    sw $t9, 12($a1)
    addi $t9, $t9, 16 # right 4 unit
    sw $t9, 16($a1)
   
    # update the redrawQueueLength with number of pixels we changed
    lw $a2, 0($a2)
    addi $t9, $a2, 5
    la $a2, redrawQueueLength
    sw $t9, 0($a2)
   
    j MOVECALCEND

MOVESDOWN:
    addi $t8, $t8, WIDTH_BY_4
   
    #        x x x
    #      x       x
    addi $t9, $t7, 4
    sw $t9, 0($a1)
    addi $t9, $t9, 4
    sw $t9, 4($a1)
    addi $t9, $t9, -8
    sw $t9, 8($a1)
   
    addi $t9, $t9, 508 # down then left +512 - 4
    sw $t9, 12($a1)
    addi $t9, $t9, 16 # right 4 unit
    sw $t9, 16($a1)
   
    # update the redrawQueueLength with number of pixels we changed
    lw $a2, 0($a2)
    addi $t9, $a2, 5
    la $a2, redrawQueueLength
    sw $t9, 0($a2)
    
    j MOVECALCEND

# Loop and apply saw drawing to all 
    
# Draw the first frame of the saw starting at a location in $t4
DrawSawFrameOne:
    # Store colours into $t1-3
    li, $t1, sawDarkGrey
    li, $t2, sawLightGrey
    li, $t3, sawBlack
    
    # row 1
    sw $t1, 0($t4)
    sw $t2, 4($t4)
    sw $t2, 8($t4)
    
    # shift to the next row
    addi $t4, $t4, WIDTH_BY_4
    
    # row 2
    sw $t2, -4($t4)
    sw $t1, 0($t4)
    sw $t1, 4($t4)
    sw $t1, 8($t4)
    sw $t1, 12($t4)
    
    # shift to the next row
    addi, $t4, $t4, WIDTH_BY_4
    
    # row 3
    sw $t2, -4($t4)
    sw $t1, 0($t4)
    sw $t3, 4($t4)
    sw $t1, 8($t4)
    sw $t2, 12($t4)

    # shift to the next row
    addi, $t4, $t4, WIDTH_BY_4
    
    # row 4
    sw $t1, -4($t4)
    sw $t1, 0($t4)
    sw $t1, 4($t4)
    sw $t1, 8($t4)
    sw $t2, 12($t4)

    # shift to the next row
    addi, $t4, $t4, WIDTH_BY_4
    
    # row 5
    sw $t2, 0($t4)
    sw $t2, 4($t4)
    sw $t1, 8($t4)
    j DRAWFRAMEOVER

# Draw the second frame of the saw
DrawSawFrameTwo:
    # Store colours into $t1-3
    li, $t1, sawDarkGrey
    li, $t2, sawLightGrey
    li, $t3, sawBlack
    
    # black rows to make it stand out more
    
    # row 1
    sw $t2, 0($t4)
    sw $t1, 4($t4)
    sw $t2, 8($t4)
    
    # shift to the next row
    addi, $t4, $t4, WIDTH_BY_4
    
    # row 2
    sw $t1, -4($t4)
    sw $t1, 0($t4)
    sw $t1, 4($t4)
    sw $t1, 8($t4)
    sw $t1, 12($t4)
    
    # shift to the next row
    addi, $t4, $t4, WIDTH_BY_4
    
    # row 3
    sw $t1, -4($t4)
    sw $t1, 0($t4)
    sw $t3, 4($t4)
    sw $t1, 8($t4)
    sw $t1, 12($t4)

    # shift to the next row
    addi, $t4, $t4, WIDTH_BY_4
    
    # row 4
    sw $t2, -4($t4)
    sw $t1, 0($t4)
    sw $t1, 4($t4)
    sw $t1, 8($t4)
    sw $t2, 12($t4)

    # shift to the next row
    addi, $t4, $t4, WIDTH_BY_4
    
    # row 5
    sw $t2, 0($t4)
    sw $t1, 4($t4)
    sw $t2, 8($t4)
    j DRAWFRAMEOVER

# Draw the third frame of the saw
DrawSawFrameThree:
    # Store colours into $t1-3
    li, $t1, sawDarkGrey
    li, $t2, sawLightGrey
    li, $t3, sawBlack
    
    # row 1
    sw $t2, 0($t4)
    sw $t2, 4($t4)
    sw $t1, 8($t4)
    
    # shift to the next row
    addi, $t4, $t4, WIDTH_BY_4
    
    # row 2
    sw $t1, -4($t4)
    sw $t1, 0($t4)
    sw $t1, 4($t4)
    sw $t1, 8($t4)
    sw $t2, 12($t4)
    
    # shift to the next row
    addi, $t4, $t4, WIDTH_BY_4
    
    # row 3
    sw $t2, -4($t4)
    sw $t1, 0($t4)
    sw $t3, 4($t4)
    sw $t1, 8($t4)
    sw $t2, 12($t4)

    # shift to the next row
    addi, $t4, $t4, WIDTH_BY_4
    sw $t2, -4($t4)
    sw $t1, 0($t4)
    sw $t1, 4($t4)
    sw $t1, 8($t4)
    sw $t1, 12($t4)

    # shift to the next row
    addi, $t4, $t4, WIDTH_BY_4
    
    # row 5
    sw $t1, 0($t4)
    sw $t2, 4($t4)
    sw $t2, 8($t4)
    j DRAWFRAMEOVER
    
DrawCharacter:
    # given a start index in $t4 (bottom left) draw the character
    # store the colours into $t1-4
    li $t1, playerBody
    li $t2, playerEyes
    li $t3, playerHelmet
    li $t5, playerFeather
    
    # In case the character switched directions need to clear previous feather
    la $t6, backgroundToRedraw
    # stack length
    la $t7, redrawQueueLength
    
    # in register $t8 store the pixel address that needs to be changed
    addi $t8, $t4, -2040
    
    # need the offset not the offset + address
    sub $t9, $t8, $t0
    sw $t9, 0($t6)
    
    addi $t9, $t9, 4
    sw $t9, 0($t6)
    
    # now update the queue length
    lw $t9, 0($t7)
    addi $t9, $t9, 2
    sw $t9, 0($t7)
    
    
    # $t4 will contain the location + offset
    # draw bottom
    sw $t1, 0($t4)
    sw $t1, 4($t4)
    sw $t1, 8($t4)
    sw $t1, 12($t4)
    
    # shift to the upper row
    subi, $t4, $t4, WIDTH_BY_4
    
    # second row (contains eyes)
    sw $t1, 0($t4)
    sw $t2, 4($t4)
    sw $t1, 8($t4)
    sw $t2, 12($t4)
    
    # shift to the upper row
    subi, $t4, $t4, WIDTH_BY_4
    
    sw $t1, 0($t4)
    sw $t1, 4($t4)
    sw $t1, 8($t4)
    sw $t1, 12($t4)
    
    # shift to the upper row
    subi, $t4, $t4, WIDTH_BY_4
    
    # helmet
    sw $t3, 4($t4)
    sw $t3, 8($t4)
    
    # shift to the upper row
    subi, $t4, $t4, WIDTH_BY_4
    
    # feather
    sw $t5, 0($t4)
    sw $t5, 4($t4)
    jr $ra
    
# in the case that the user walks leftwards instead of right we need to mirror the character
DrawMirroredCharacter:
    # current address of the bottom left pixel is in register $t4
    # we need to queue the removal of the feather as the character isn't symmetric
    li $t1, playerBody
    li $t2, playerEyes
    li $t3, playerHelmet
    li $t5, playerFeather
    
    # load the address needed data in .data
    
    # backgroundToRedraw
    la $t6, backgroundToRedraw
    # stack length
    la $t7, redrawQueueLength
    
    # in register $t8 store the pixel address that needs to be changed
    addi $t8, $t4, -1544
    
    # need the offset not the offset + address
    sub $t9, $t8, $t0
    sw $t9, 0($t6)
    
    addi $t9, $t9, 4
    sw $t9, 0($t6)
    
    # now update the queue length
    lw $t9, 0($t7)
    addi $t9, $t9, 2
    sw $t9, 0($t7)
    
    # draw the mirrored character
    
    # $t4 will contain the location + offset
    # draw bottom
    sw $t1, 0($t4)
    sw $t1, 4($t4)
    sw $t1, 8($t4)
    sw $t1, 12($t4)    

    # shift to the upper row
    subi, $t4, $t4, WIDTH_BY_4
    
    # second row (contains eyes)
    sw $t2, 0($t4)
    sw $t1, 4($t4)
    sw $t2, 8($t4)
    sw $t1, 12($t4)
    
    # shift to the upper row
    subi, $t4, $t4, WIDTH_BY_4
    
    sw $t1, 0($t4)
    sw $t1, 4($t4)
    sw $t1, 8($t4)
    sw $t1, 12($t4)
    
    # shift to the upper row
    subi, $t4, $t4, WIDTH_BY_4
    
    # helmet
    sw $t3, 4($t4)
    sw $t3, 8($t4)
    
    # shift to the upper row
    subi, $t4, $t4, WIDTH_BY_4
    
    # feather
    sw $t5, 8($t4)
    sw $t5, 12($t4)
    jr $ra
    
    
    
    
# shifts the character by 1 pixel unit right
ShiftPlayerRight:
    # read the current address from .data store into $t1 in the form of by 4 unit
    la $t1, currentPlayerLocation
    lw $t5, 0($t1)
    
    # copy $t5 into $t9 as we'll be changing values
    move $t9, $t5
    
    # write the pixels that will be overwritten to the backgroundToDraw
    # read the address of the background to delete
    la $t2, backgroundToRedraw
    la $t3, redrawQueueLength
        
    # store in register $t9 the 
    
    addi $t9, $t9, -4
    sw $t9, 0($t2)
    # bottom left pixel and body
    addi $t9, $t9, 4
    sw $t9, 4($t2)
    
    # offset for the pixel above 
    addi $t9, $t9, -512
    sw $t9, 8($t2)
    
    addi $t9, $t9, -512
    sw $t9, 12($t2)
    
    addi $t9, $t9, -1024
    sw $t9, 16($t2)
    
    # helmet is down one pixel and to the right
    addi $t9, $t9, 516
    sw $t9, 20($t2)
    
    # update the queue length
    lw $t4, 0($t3)
    addi $t4, $t4, 6
    sw $t4, 0($t3)
    
    # update the players current location in data
    addi $t5, $t5, 4
    sw $t5, 0($t1)
    
    
    # redraw the character to the right
    move $t4, $t5
    add $t4, $t4, $t0
    
    # save the $ra before jumping
    addi $sp, $sp, -4
    sw $ra, 0($sp)
    jal DrawCharacter
    lw $ra, 0($sp)
    addi $sp, $sp, 4
    
    addi $sp, $sp, -4
    sw $ra, 0($sp)
    jal RedrawBackground
    lw $ra, 0($sp)
    addi $sp, $sp, 4    
    # check for any potential collision with objects that can damage the player
    
    # jump back to the calling function
    jr $ra  

# shifts the character by 4 pixel units vertically (passed through register $t1)
ShiftPlayerLeft:
    # read the current address from .data store into $t1 in the form of by 4 unit
    la $t1, currentPlayerLocation
    lw $t5, 0($t1)
    
    # copy $t5 into $t9 as we'll be changing values
    move $t9, $t5
    
    # write the pixels that will be overwritten to the backgroundToDraw
    # read the address of the background to delete
    la $t2, backgroundToRedraw
    la $t3, redrawQueueLength
    
    # store in register $t9 the 
    # bottom right pixel and body
    addi $t9, $t9, 8
    
    sw $t9, 0($t2)
    
    addi $t9, $t9, 4
    
    sw $t9, 4($t2)
    
    # offset for the pixel above 
    addi $t9, $t9, -512
    sw $t9, 8($t2)
    
    addi $t9, $t9, -512
    sw $t9, 12($t2)
    
    addi $t9, $t9, -1024
    sw $t9, 16($t2)
    
    # helmet is down one pixel and to the left
    addi $t9, $t9, 508
    sw $t9, 20($t2)
    
    # update the queue length
    lw $t4, 0($t3)
    addi $t4, $t4, 6
    sw $t4, 0($t3)
    
    # update the players current location in data
    addi $t5, $t5, -4
    sw $t5, 0($t1)
    
    # redraw the character to the right
    move $t4, $t5
    add $t4, $t4, $t0
    
    # save the $ra before jumping
    addi $sp, $sp, -4
    sw $ra, 0($sp)
    jal DrawMirroredCharacter
    lw $ra, 0($sp)
    addi $sp, $sp, 4
    
    addi $sp, $sp, -4
    sw $ra, 0($sp)
    jal RedrawBackground
    lw $ra, 0($sp)
    addi $sp, $sp, 4    
    
    # check for any potential collision with objects that can damage the player
    
    # jump back to the calling function
    jr $ra 

# Draw a spike starting at a point and length that the spike should be
# Register based as multiple spikes will be on the screen moving at same time
# Dont want to queue and dequeue from the stack multiple times
DrawSpikeFloorMoving:
    jr $ra
    
# Draw a moving platform given a start point and endpoint horizontally
# If player standing on it they move with it horizontally
DrawPlatformMovingHorizontally:
    jr $ra
    
# Draw a moving platform given a start point and endpoint vertically
# If player standing on it they move with it vertically
DrawPlatformMovingVertically:
    jr $ra
    
# Draws a heart given a start point
DrawHeart:
    jr $ra
    
# Reads number of lives off the stack and draws heart accordingly
DrawLives:
    jr $ra

# Functions that will clear the screen for each type of moving object
RedrawBackground:
    # loop through our backgroundToRedraw array up to index redrawQueueLength
    
    # get address of background array store in $t6
    la $t6, background
    
    # store the address of array in $t1
    la $t1, backgroundToRedraw
    
    # store an indexing variable in $2
    move $t2, $zero
    
    # load the queueLength in $t3
    lw $t3, redrawQueueLength
    
REDRAWBACKGROUNDLOOP:
    # break out of the loop when our indexing variable reaches the queue length
    bge $t2, $t3, REDRAWBACKGROUNDEND
    
    # store the offset in $t4
    sll $t4, $t2, 2
    
    # get backgroundToRedraw[i] address
    add $t4, $t1, $t4
    
    # store the pixel number in $t5
    lw $t5, 0($t4)
    
    # load the index of colour into register $t7
    add $t7, $t5, $t6
    
    # get the colour that the pixel is in the background by reading at that indice
    lw $t7, 0($t7)
    
    # offset the start of frame buffer $t0
    add $t5, $t5, $t0
    
    # now write the color to the frame buffer
    sw $t7, 0($t5)
    
    # increment our indice
    addi $t2, $t2, 1
    
    # loop back
    j REDRAWBACKGROUNDLOOP

REDRAWBACKGROUNDEND:
    # set the num of pixels to redraw to 0
    la $t1, redrawQueueLength
    sw $zero, 0($t1)
    
    # will jump back to game loop
    jr $ra
    
redrawEntireBackground:
    la $t1, redrawQueueLength
    li $s2, 0
    li $t3, 8192
    li $t4, 4
    la $t5 backgroundToRedraw
REDRAWENTIREBACKGROUNDLOOP:
    beq $s2, $t3, REDRAWENTIRELOOPEND
    mult $s2, $t4
    mflo $t6

    add $t5, $t5, $t4
    # write this into the redraw[i]
    sw $t6, 0($t5)

    # increment indice
    addi $s2, $s2, 1
    j REDRAWENTIREBACKGROUNDLOOP

REDRAWENTIRELOOPEND:
    # make length $t3
    sw $t3, 0($t1)

    # store $ra
    move $s6, $ra
    # call clear
    jal RedrawBackground
    move $ra, $s6
    jr $ra
    
# handle keyboard input
HandleKeyInput:
    li $t1, KEYBOARD_ADDRESS
    
    # store the value of key press into $t1
    lw $t1, 4($t1)
    
    # store $ra as we'll jump and link in here
    addi $sp, $sp, -4
    sw $ra, 0($sp)
    
HandleKeyA:
    bne $t1, 0x61, HandleKeyD
	
    # set the character direction to face left
    la $t2, currentCharacterDirection
    li $t3, -1
    sw $t3, 0($t2)
	
    jal ShiftPlayerLeft

HandleKeyD:
    bne $t1, 0x64, HandleKeyS
    
    # set the character direction to face right
    la $t2, currentCharacterDirection
    li $t3, 1
    sw $t3, 0($t2)
    jal ShiftPlayerRight
    
    
HandleKeyS:
	#bne $t0, 0x73, HandleKeypressW
	#beq $t9, SHIP_MAX_Y, HandleKeypressW
	#sw $v0, ShipDy
HandleKeyW:
	#bne $t0, 0x77, HandleKeypressP
	#beqz $t9, HandleKeypressP
	#sw $v1, ShipDy
HandleKeyP:
	#bne $t0, 0x70, HandleKeypressQ
	#j main # RESET GAME
HandleKeyQ:
	#bne $t0, 0x71, HandleKeypressExit
	#move $s0, $ra
	#jal SpawnShot
	#move $ra, $s0
HandleKeyExit:
        # pop $ra off stack
        lw $ra, 0($sp)
        addi $sp, $sp, 4
	jr $ra
